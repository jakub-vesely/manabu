

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun May 10 11:01:15 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  0007                     	;# 
    37  0008                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000E                     	;# 
    43  0011                     	;# 
    44  0012                     	;# 
    45  0013                     	;# 
    46  0015                     	;# 
    47  0016                     	;# 
    48  0016                     	;# 
    49  0017                     	;# 
    50  0018                     	;# 
    51  0019                     	;# 
    52  001A                     	;# 
    53  001B                     	;# 
    54  001C                     	;# 
    55  008C                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0095                     	;# 
    61  0096                     	;# 
    62  0097                     	;# 
    63  0099                     	;# 
    64  009A                     	;# 
    65  009B                     	;# 
    66  009B                     	;# 
    67  009C                     	;# 
    68  009D                     	;# 
    69  009E                     	;# 
    70  009F                     	;# 
    71  010C                     	;# 
    72  010E                     	;# 
    73  0111                     	;# 
    74  0112                     	;# 
    75  0113                     	;# 
    76  0114                     	;# 
    77  0115                     	;# 
    78  0116                     	;# 
    79  0117                     	;# 
    80  0118                     	;# 
    81  0119                     	;# 
    82  011D                     	;# 
    83  018C                     	;# 
    84  018E                     	;# 
    85  0191                     	;# 
    86  0191                     	;# 
    87  0192                     	;# 
    88  0193                     	;# 
    89  0193                     	;# 
    90  0194                     	;# 
    91  0195                     	;# 
    92  0196                     	;# 
    93  0197                     	;# 
    94  020C                     	;# 
    95  0211                     	;# 
    96  0211                     	;# 
    97  0212                     	;# 
    98  0212                     	;# 
    99  0213                     	;# 
   100  0213                     	;# 
   101  0214                     	;# 
   102  0214                     	;# 
   103  0215                     	;# 
   104  0215                     	;# 
   105  0215                     	;# 
   106  0216                     	;# 
   107  0216                     	;# 
   108  0217                     	;# 
   109  0217                     	;# 
   110  0391                     	;# 
   111  0392                     	;# 
   112  0393                     	;# 
   113  0498                     	;# 
   114  0498                     	;# 
   115  0499                     	;# 
   116  049A                     	;# 
   117  049B                     	;# 
   118  049B                     	;# 
   119  049C                     	;# 
   120  049E                     	;# 
   121  049F                     	;# 
   122  0611                     	;# 
   123  0612                     	;# 
   124  0613                     	;# 
   125  0613                     	;# 
   126  0614                     	;# 
   127  0615                     	;# 
   128  0616                     	;# 
   129  0616                     	;# 
   130  0617                     	;# 
   131  0618                     	;# 
   132  0619                     	;# 
   133  0619                     	;# 
   134  061A                     	;# 
   135  061B                     	;# 
   136  061C                     	;# 
   137  061C                     	;# 
   138  0691                     	;# 
   139  0692                     	;# 
   140  0693                     	;# 
   141  0694                     	;# 
   142  0695                     	;# 
   143  0F0F                     	;# 
   144  0F10                     	;# 
   145  0F11                     	;# 
   146  0F12                     	;# 
   147  0F13                     	;# 
   148  0F14                     	;# 
   149  0F15                     	;# 
   150  0F16                     	;# 
   151  0F17                     	;# 
   152  0F18                     	;# 
   153  0F19                     	;# 
   154  0F1A                     	;# 
   155  0F1B                     	;# 
   156  0F1C                     	;# 
   157  0F1D                     	;# 
   158  0F1E                     	;# 
   159  0F1F                     	;# 
   160  0FE3                     	;# 
   161  0FE4                     	;# 
   162  0FE5                     	;# 
   163  0FE6                     	;# 
   164  0FE7                     	;# 
   165  0FE8                     	;# 
   166  0FE9                     	;# 
   167  0FEA                     	;# 
   168  0FEB                     	;# 
   169  0FED                     	;# 
   170  0FEE                     	;# 
   171  0FEF                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  0008                     	;# 
   181  0009                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000E                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  008C                     	;# 
   199  008E                     	;# 
   200  0091                     	;# 
   201  0092                     	;# 
   202  0093                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  010C                     	;# 
   215  010E                     	;# 
   216  0111                     	;# 
   217  0112                     	;# 
   218  0113                     	;# 
   219  0114                     	;# 
   220  0115                     	;# 
   221  0116                     	;# 
   222  0117                     	;# 
   223  0118                     	;# 
   224  0119                     	;# 
   225  011D                     	;# 
   226  018C                     	;# 
   227  018E                     	;# 
   228  0191                     	;# 
   229  0191                     	;# 
   230  0192                     	;# 
   231  0193                     	;# 
   232  0193                     	;# 
   233  0194                     	;# 
   234  0195                     	;# 
   235  0196                     	;# 
   236  0197                     	;# 
   237  020C                     	;# 
   238  0211                     	;# 
   239  0211                     	;# 
   240  0212                     	;# 
   241  0212                     	;# 
   242  0213                     	;# 
   243  0213                     	;# 
   244  0214                     	;# 
   245  0214                     	;# 
   246  0215                     	;# 
   247  0215                     	;# 
   248  0215                     	;# 
   249  0216                     	;# 
   250  0216                     	;# 
   251  0217                     	;# 
   252  0217                     	;# 
   253  0391                     	;# 
   254  0392                     	;# 
   255  0393                     	;# 
   256  0498                     	;# 
   257  0498                     	;# 
   258  0499                     	;# 
   259  049A                     	;# 
   260  049B                     	;# 
   261  049B                     	;# 
   262  049C                     	;# 
   263  049E                     	;# 
   264  049F                     	;# 
   265  0611                     	;# 
   266  0612                     	;# 
   267  0613                     	;# 
   268  0613                     	;# 
   269  0614                     	;# 
   270  0615                     	;# 
   271  0616                     	;# 
   272  0616                     	;# 
   273  0617                     	;# 
   274  0618                     	;# 
   275  0619                     	;# 
   276  0619                     	;# 
   277  061A                     	;# 
   278  061B                     	;# 
   279  061C                     	;# 
   280  061C                     	;# 
   281  0691                     	;# 
   282  0692                     	;# 
   283  0693                     	;# 
   284  0694                     	;# 
   285  0695                     	;# 
   286  0F0F                     	;# 
   287  0F10                     	;# 
   288  0F11                     	;# 
   289  0F12                     	;# 
   290  0F13                     	;# 
   291  0F14                     	;# 
   292  0F15                     	;# 
   293  0F16                     	;# 
   294  0F17                     	;# 
   295  0F18                     	;# 
   296  0F19                     	;# 
   297  0F1A                     	;# 
   298  0F1B                     	;# 
   299  0F1C                     	;# 
   300  0F1D                     	;# 
   301  0F1E                     	;# 
   302  0F1F                     	;# 
   303  0FE3                     	;# 
   304  0FE4                     	;# 
   305  0FE5                     	;# 
   306  0FE6                     	;# 
   307  0FE7                     	;# 
   308  0FE8                     	;# 
   309  0FE9                     	;# 
   310  0FEA                     	;# 
   311  0FEB                     	;# 
   312  0FED                     	;# 
   313  0FEE                     	;# 
   314  0FEF                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  000E                     	;# 
   329  0011                     	;# 
   330  0012                     	;# 
   331  0013                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  008C                     	;# 
   342  008E                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0095                     	;# 
   347  0096                     	;# 
   348  0097                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  010C                     	;# 
   358  010E                     	;# 
   359  0111                     	;# 
   360  0112                     	;# 
   361  0113                     	;# 
   362  0114                     	;# 
   363  0115                     	;# 
   364  0116                     	;# 
   365  0117                     	;# 
   366  0118                     	;# 
   367  0119                     	;# 
   368  011D                     	;# 
   369  018C                     	;# 
   370  018E                     	;# 
   371  0191                     	;# 
   372  0191                     	;# 
   373  0192                     	;# 
   374  0193                     	;# 
   375  0193                     	;# 
   376  0194                     	;# 
   377  0195                     	;# 
   378  0196                     	;# 
   379  0197                     	;# 
   380  020C                     	;# 
   381  0211                     	;# 
   382  0211                     	;# 
   383  0212                     	;# 
   384  0212                     	;# 
   385  0213                     	;# 
   386  0213                     	;# 
   387  0214                     	;# 
   388  0214                     	;# 
   389  0215                     	;# 
   390  0215                     	;# 
   391  0215                     	;# 
   392  0216                     	;# 
   393  0216                     	;# 
   394  0217                     	;# 
   395  0217                     	;# 
   396  0391                     	;# 
   397  0392                     	;# 
   398  0393                     	;# 
   399  0498                     	;# 
   400  0498                     	;# 
   401  0499                     	;# 
   402  049A                     	;# 
   403  049B                     	;# 
   404  049B                     	;# 
   405  049C                     	;# 
   406  049E                     	;# 
   407  049F                     	;# 
   408  0611                     	;# 
   409  0612                     	;# 
   410  0613                     	;# 
   411  0613                     	;# 
   412  0614                     	;# 
   413  0615                     	;# 
   414  0616                     	;# 
   415  0616                     	;# 
   416  0617                     	;# 
   417  0618                     	;# 
   418  0619                     	;# 
   419  0619                     	;# 
   420  061A                     	;# 
   421  061B                     	;# 
   422  061C                     	;# 
   423  061C                     	;# 
   424  0691                     	;# 
   425  0692                     	;# 
   426  0693                     	;# 
   427  0694                     	;# 
   428  0695                     	;# 
   429  0F0F                     	;# 
   430  0F10                     	;# 
   431  0F11                     	;# 
   432  0F12                     	;# 
   433  0F13                     	;# 
   434  0F14                     	;# 
   435  0F15                     	;# 
   436  0F16                     	;# 
   437  0F17                     	;# 
   438  0F18                     	;# 
   439  0F19                     	;# 
   440  0F1A                     	;# 
   441  0F1B                     	;# 
   442  0F1C                     	;# 
   443  0F1D                     	;# 
   444  0F1E                     	;# 
   445  0F1F                     	;# 
   446  0FE3                     	;# 
   447  0FE4                     	;# 
   448  0FE5                     	;# 
   449  0FE6                     	;# 
   450  0FE7                     	;# 
   451  0FE8                     	;# 
   452  0FE9                     	;# 
   453  0FEA                     	;# 
   454  0FEB                     	;# 
   455  0FED                     	;# 
   456  0FEE                     	;# 
   457  0FEF                     	;# 
   458  0000                     	;# 
   459  0001                     	;# 
   460  0002                     	;# 
   461  0003                     	;# 
   462  0004                     	;# 
   463  0005                     	;# 
   464  0006                     	;# 
   465  0007                     	;# 
   466  0008                     	;# 
   467  0009                     	;# 
   468  000A                     	;# 
   469  000B                     	;# 
   470  000C                     	;# 
   471  000E                     	;# 
   472  0011                     	;# 
   473  0012                     	;# 
   474  0013                     	;# 
   475  0015                     	;# 
   476  0016                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001C                     	;# 
   484  008C                     	;# 
   485  008E                     	;# 
   486  0091                     	;# 
   487  0092                     	;# 
   488  0093                     	;# 
   489  0095                     	;# 
   490  0096                     	;# 
   491  0097                     	;# 
   492  0099                     	;# 
   493  009A                     	;# 
   494  009B                     	;# 
   495  009B                     	;# 
   496  009C                     	;# 
   497  009D                     	;# 
   498  009E                     	;# 
   499  009F                     	;# 
   500  010C                     	;# 
   501  010E                     	;# 
   502  0111                     	;# 
   503  0112                     	;# 
   504  0113                     	;# 
   505  0114                     	;# 
   506  0115                     	;# 
   507  0116                     	;# 
   508  0117                     	;# 
   509  0118                     	;# 
   510  0119                     	;# 
   511  011D                     	;# 
   512  018C                     	;# 
   513  018E                     	;# 
   514  0191                     	;# 
   515  0191                     	;# 
   516  0192                     	;# 
   517  0193                     	;# 
   518  0193                     	;# 
   519  0194                     	;# 
   520  0195                     	;# 
   521  0196                     	;# 
   522  0197                     	;# 
   523  020C                     	;# 
   524  0211                     	;# 
   525  0211                     	;# 
   526  0212                     	;# 
   527  0212                     	;# 
   528  0213                     	;# 
   529  0213                     	;# 
   530  0214                     	;# 
   531  0214                     	;# 
   532  0215                     	;# 
   533  0215                     	;# 
   534  0215                     	;# 
   535  0216                     	;# 
   536  0216                     	;# 
   537  0217                     	;# 
   538  0217                     	;# 
   539  0391                     	;# 
   540  0392                     	;# 
   541  0393                     	;# 
   542  0498                     	;# 
   543  0498                     	;# 
   544  0499                     	;# 
   545  049A                     	;# 
   546  049B                     	;# 
   547  049B                     	;# 
   548  049C                     	;# 
   549  049E                     	;# 
   550  049F                     	;# 
   551  0611                     	;# 
   552  0612                     	;# 
   553  0613                     	;# 
   554  0613                     	;# 
   555  0614                     	;# 
   556  0615                     	;# 
   557  0616                     	;# 
   558  0616                     	;# 
   559  0617                     	;# 
   560  0618                     	;# 
   561  0619                     	;# 
   562  0619                     	;# 
   563  061A                     	;# 
   564  061B                     	;# 
   565  061C                     	;# 
   566  061C                     	;# 
   567  0691                     	;# 
   568  0692                     	;# 
   569  0693                     	;# 
   570  0694                     	;# 
   571  0695                     	;# 
   572  0F0F                     	;# 
   573  0F10                     	;# 
   574  0F11                     	;# 
   575  0F12                     	;# 
   576  0F13                     	;# 
   577  0F14                     	;# 
   578  0F15                     	;# 
   579  0F16                     	;# 
   580  0F17                     	;# 
   581  0F18                     	;# 
   582  0F19                     	;# 
   583  0F1A                     	;# 
   584  0F1B                     	;# 
   585  0F1C                     	;# 
   586  0F1D                     	;# 
   587  0F1E                     	;# 
   588  0F1F                     	;# 
   589  0FE3                     	;# 
   590  0FE4                     	;# 
   591  0FE5                     	;# 
   592  0FE6                     	;# 
   593  0FE7                     	;# 
   594  0FE8                     	;# 
   595  0FE9                     	;# 
   596  0FEA                     	;# 
   597  0FEB                     	;# 
   598  0FED                     	;# 
   599  0FEE                     	;# 
   600  0FEF                     	;# 
   601  0000                     	;# 
   602  0001                     	;# 
   603  0002                     	;# 
   604  0003                     	;# 
   605  0004                     	;# 
   606  0005                     	;# 
   607  0006                     	;# 
   608  0007                     	;# 
   609  0008                     	;# 
   610  0009                     	;# 
   611  000A                     	;# 
   612  000B                     	;# 
   613  000C                     	;# 
   614  000E                     	;# 
   615  0011                     	;# 
   616  0012                     	;# 
   617  0013                     	;# 
   618  0015                     	;# 
   619  0016                     	;# 
   620  0016                     	;# 
   621  0017                     	;# 
   622  0018                     	;# 
   623  0019                     	;# 
   624  001A                     	;# 
   625  001B                     	;# 
   626  001C                     	;# 
   627  008C                     	;# 
   628  008E                     	;# 
   629  0091                     	;# 
   630  0092                     	;# 
   631  0093                     	;# 
   632  0095                     	;# 
   633  0096                     	;# 
   634  0097                     	;# 
   635  0099                     	;# 
   636  009A                     	;# 
   637  009B                     	;# 
   638  009B                     	;# 
   639  009C                     	;# 
   640  009D                     	;# 
   641  009E                     	;# 
   642  009F                     	;# 
   643  010C                     	;# 
   644  010E                     	;# 
   645  0111                     	;# 
   646  0112                     	;# 
   647  0113                     	;# 
   648  0114                     	;# 
   649  0115                     	;# 
   650  0116                     	;# 
   651  0117                     	;# 
   652  0118                     	;# 
   653  0119                     	;# 
   654  011D                     	;# 
   655  018C                     	;# 
   656  018E                     	;# 
   657  0191                     	;# 
   658  0191                     	;# 
   659  0192                     	;# 
   660  0193                     	;# 
   661  0193                     	;# 
   662  0194                     	;# 
   663  0195                     	;# 
   664  0196                     	;# 
   665  0197                     	;# 
   666  020C                     	;# 
   667  0211                     	;# 
   668  0211                     	;# 
   669  0212                     	;# 
   670  0212                     	;# 
   671  0213                     	;# 
   672  0213                     	;# 
   673  0214                     	;# 
   674  0214                     	;# 
   675  0215                     	;# 
   676  0215                     	;# 
   677  0215                     	;# 
   678  0216                     	;# 
   679  0216                     	;# 
   680  0217                     	;# 
   681  0217                     	;# 
   682  0391                     	;# 
   683  0392                     	;# 
   684  0393                     	;# 
   685  0498                     	;# 
   686  0498                     	;# 
   687  0499                     	;# 
   688  049A                     	;# 
   689  049B                     	;# 
   690  049B                     	;# 
   691  049C                     	;# 
   692  049E                     	;# 
   693  049F                     	;# 
   694  0611                     	;# 
   695  0612                     	;# 
   696  0613                     	;# 
   697  0613                     	;# 
   698  0614                     	;# 
   699  0615                     	;# 
   700  0616                     	;# 
   701  0616                     	;# 
   702  0617                     	;# 
   703  0618                     	;# 
   704  0619                     	;# 
   705  0619                     	;# 
   706  061A                     	;# 
   707  061B                     	;# 
   708  061C                     	;# 
   709  061C                     	;# 
   710  0691                     	;# 
   711  0692                     	;# 
   712  0693                     	;# 
   713  0694                     	;# 
   714  0695                     	;# 
   715  0F0F                     	;# 
   716  0F10                     	;# 
   717  0F11                     	;# 
   718  0F12                     	;# 
   719  0F13                     	;# 
   720  0F14                     	;# 
   721  0F15                     	;# 
   722  0F16                     	;# 
   723  0F17                     	;# 
   724  0F18                     	;# 
   725  0F19                     	;# 
   726  0F1A                     	;# 
   727  0F1B                     	;# 
   728  0F1C                     	;# 
   729  0F1D                     	;# 
   730  0F1E                     	;# 
   731  0F1F                     	;# 
   732  0FE3                     	;# 
   733  0FE4                     	;# 
   734  0FE5                     	;# 
   735  0FE6                     	;# 
   736  0FE7                     	;# 
   737  0FE8                     	;# 
   738  0FE9                     	;# 
   739  0FEA                     	;# 
   740  0FEB                     	;# 
   741  0FED                     	;# 
   742  0FEE                     	;# 
   743  0FEF                     	;# 
   744  0000                     	;# 
   745  0001                     	;# 
   746  0002                     	;# 
   747  0003                     	;# 
   748  0004                     	;# 
   749  0005                     	;# 
   750  0006                     	;# 
   751  0007                     	;# 
   752  0008                     	;# 
   753  0009                     	;# 
   754  000A                     	;# 
   755  000B                     	;# 
   756  000C                     	;# 
   757  000E                     	;# 
   758  0011                     	;# 
   759  0012                     	;# 
   760  0013                     	;# 
   761  0015                     	;# 
   762  0016                     	;# 
   763  0016                     	;# 
   764  0017                     	;# 
   765  0018                     	;# 
   766  0019                     	;# 
   767  001A                     	;# 
   768  001B                     	;# 
   769  001C                     	;# 
   770  008C                     	;# 
   771  008E                     	;# 
   772  0091                     	;# 
   773  0092                     	;# 
   774  0093                     	;# 
   775  0095                     	;# 
   776  0096                     	;# 
   777  0097                     	;# 
   778  0099                     	;# 
   779  009A                     	;# 
   780  009B                     	;# 
   781  009B                     	;# 
   782  009C                     	;# 
   783  009D                     	;# 
   784  009E                     	;# 
   785  009F                     	;# 
   786  010C                     	;# 
   787  010E                     	;# 
   788  0111                     	;# 
   789  0112                     	;# 
   790  0113                     	;# 
   791  0114                     	;# 
   792  0115                     	;# 
   793  0116                     	;# 
   794  0117                     	;# 
   795  0118                     	;# 
   796  0119                     	;# 
   797  011D                     	;# 
   798  018C                     	;# 
   799  018E                     	;# 
   800  0191                     	;# 
   801  0191                     	;# 
   802  0192                     	;# 
   803  0193                     	;# 
   804  0193                     	;# 
   805  0194                     	;# 
   806  0195                     	;# 
   807  0196                     	;# 
   808  0197                     	;# 
   809  020C                     	;# 
   810  0211                     	;# 
   811  0211                     	;# 
   812  0212                     	;# 
   813  0212                     	;# 
   814  0213                     	;# 
   815  0213                     	;# 
   816  0214                     	;# 
   817  0214                     	;# 
   818  0215                     	;# 
   819  0215                     	;# 
   820  0215                     	;# 
   821  0216                     	;# 
   822  0216                     	;# 
   823  0217                     	;# 
   824  0217                     	;# 
   825  0391                     	;# 
   826  0392                     	;# 
   827  0393                     	;# 
   828  0498                     	;# 
   829  0498                     	;# 
   830  0499                     	;# 
   831  049A                     	;# 
   832  049B                     	;# 
   833  049B                     	;# 
   834  049C                     	;# 
   835  049E                     	;# 
   836  049F                     	;# 
   837  0611                     	;# 
   838  0612                     	;# 
   839  0613                     	;# 
   840  0613                     	;# 
   841  0614                     	;# 
   842  0615                     	;# 
   843  0616                     	;# 
   844  0616                     	;# 
   845  0617                     	;# 
   846  0618                     	;# 
   847  0619                     	;# 
   848  0619                     	;# 
   849  061A                     	;# 
   850  061B                     	;# 
   851  061C                     	;# 
   852  061C                     	;# 
   853  0691                     	;# 
   854  0692                     	;# 
   855  0693                     	;# 
   856  0694                     	;# 
   857  0695                     	;# 
   858  0F0F                     	;# 
   859  0F10                     	;# 
   860  0F11                     	;# 
   861  0F12                     	;# 
   862  0F13                     	;# 
   863  0F14                     	;# 
   864  0F15                     	;# 
   865  0F16                     	;# 
   866  0F17                     	;# 
   867  0F18                     	;# 
   868  0F19                     	;# 
   869  0F1A                     	;# 
   870  0F1B                     	;# 
   871  0F1C                     	;# 
   872  0F1D                     	;# 
   873  0F1E                     	;# 
   874  0F1F                     	;# 
   875  0FE3                     	;# 
   876  0FE4                     	;# 
   877  0FE5                     	;# 
   878  0FE6                     	;# 
   879  0FE7                     	;# 
   880  0FE8                     	;# 
   881  0FE9                     	;# 
   882  0FEA                     	;# 
   883  0FEB                     	;# 
   884  0FED                     	;# 
   885  0FEE                     	;# 
   886  0FEF                     	;# 
   887                           
   888                           	psect	idataBANK0
   889  04CA                     __pidataBANK0:	
   890                           
   891                           ;initializer for _g_stateChanged
   892  04CA  3401               	retlw	1
   893  000B                     _INTCONbits	set	11
   894  000E                     _PORTCbits	set	14
   895  001B                     _PR2	set	27
   896  001C                     _T2CONbits	set	28
   897  0064                     _RA4	set	100
   898  0065                     _RA5	set	101
   899  008B                     _SSP1IF	set	139
   900  0089                     _TMR2IF	set	137
   901  00E2                     _TMR2ON	set	226
   902  0099                     _OSCCONbits	set	153
   903  009A                     _OSCSTATbits	set	154
   904  008E                     _TRISCbits	set	142
   905  0462                     _TRISA2	set	1122
   906  0465                     _TRISA5	set	1125
   907  0473                     _TRISC3	set	1139
   908  0475                     _TRISC5	set	1141
   909  0191                     _PMADR	set	401
   910  0193                     _PMDAT	set	403
   911  018C                     _ANSELA	set	396
   912  018E                     _ANSELC	set	398
   913  0195                     _PMCON1bits	set	405
   914  0214                     _SSP1STATbits	set	532
   915  0212                     _SSPADD	set	530
   916  0211                     _SSPBUF	set	529
   917  0215                     _SSPCON1	set	533
   918  0216                     _SSPCON2	set	534
   919  0216                     _SSPCON2bits	set	534
   920  0217                     _SSPCON3	set	535
   921  0213                     _SSPMSK	set	531
   922  0214                     _SSPSTAT	set	532
   923  0214                     _SSPSTATbits	set	532
   924  10A6                     _CKE	set	4262
   925  10AC                     _CKP	set	4268
   926  10BB                     _SDAHT	set	4283
   927  10B0                     _SEN	set	4272
   928  10A7                     _SMP	set	4263
   929  10AD                     _SSPEN	set	4269
   930  10AB                     _SSPM3	set	4267
   931  0613                     _PWM1CON	set	1555
   932  0612                     _PWM1DCH	set	1554
   933  0611                     _PWM1DCL	set	1553
   934  0616                     _PWM2CON	set	1558
   935  0615                     _PWM2DCH	set	1557
   936  0614                     _PWM2DCL	set	1556
   937  0619                     _PWM3CON	set	1561
   938  0618                     _PWM3DCH	set	1560
   939  0617                     _PWM3DCL	set	1559
   940  309F                     _PWM1EN	set	12447
   941  309E                     _PWM1OE	set	12446
   942  309D                     _PWM1OUT	set	12445
   943  309C                     _PWM1POL	set	12444
   944  30B7                     _PWM2EN	set	12471
   945  30B6                     _PWM2OE	set	12470
   946  30B5                     _PWM2OUT	set	12469
   947  30B4                     _PWM2POL	set	12468
   948  30CF                     _PWM3EN	set	12495
   949  30CE                     _PWM3OE	set	12494
   950  30CD                     _PWM3OUT	set	12493
   951  30CC                     _PWM3POL	set	12492
   952                           
   953                           ; #config settings
   954  0000                     
   955                           	psect	cinit
   956  0772                     start_initialization:	
   957  0772                     __initialization:	
   958                           
   959                           ; Clear objects allocated to BANK0
   960  0772  01A0               	clrf	__pbssBANK0& (0+127)
   961  0773  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   962  0774  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   963  0775  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   964  0776  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   965  0777  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   966  0778  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   967  0779  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   968  077A  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   969                           
   970                           ; Initialize objects allocated to BANK0
   971  077B  24CA               	fcall	__pidataBANK0	;fetch initializer
   972  077C  00B1               	movwf	__pdataBANK0& (0+127)
   973  077D                     end_of_initialization:	
   974                           ;End of C runtime variable initialization code
   975                           
   976  077D                     __end_of__initialization:	
   977  077D  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   978  077E  0020               	movlb	0
   979  077F  2D0A               	ljmp	_main	;jump to C main() function
   980                           
   981                           	psect	bssBANK0
   982  0020                     __pbssBANK0:	
   983  0020                     _g_bootloaderPolicy:	
   984  0020                     	ds	1
   985  0021                     _g_commandInstruction:	
   986  0021                     	ds	1
   987  0022                     _g_commandRecieved:	
   988  0022                     	ds	1
   989  0023                     _g_commandValue:	
   990  0023                     	ds	1
   991  0024                     _g_stateFollowed:	
   992  0024                     	ds	1
   993  0025                     _g_toOutput:	
   994  0025                     	ds	1
   995  0026                     _g_persistant:	
   996  0026                     	ds	2
   997  0028                     _g_state:	
   998  0028                     	ds	1
   999                           
  1000                           	psect	dataBANK0
  1001  0031                     __pdataBANK0:	
  1002  0031                     _g_stateChanged:	
  1003  0031                     	ds	1
  1004                           
  1005                           	psect	cstackCOMMON
  1006  0070                     __pcstackCOMMON:	
  1007  0070                     ?_PwmInit:	
  1008  0070                     ??_PwmInit:	
  1009                           ; 0 bytes @ 0x0
  1010                           
  1011  0070                     ?_I2cSlaveInit:	
  1012                           ; 0 bytes @ 0x0
  1013                           
  1014  0070                     ??_I2cSlaveInit:	
  1015                           ; 0 bytes @ 0x0
  1016                           
  1017  0070                     ?_SetDutyCyclePWM:	
  1018                           ; 0 bytes @ 0x0
  1019                           
  1020  0070                     ?_SetWhiteValue:	
  1021                           ; 0 bytes @ 0x0
  1022                           
  1023  0070                     ?_ProcessStateChangedModuleTypeSpecific:	
  1024                           ; 0 bytes @ 0x0
  1025                           
  1026  0070                     ?_ModuleTypeSpecificInit:	
  1027                           ; 0 bytes @ 0x0
  1028                           
  1029  0070                     ??_ModuleTypeSpecificInit:	
  1030                           ; 0 bytes @ 0x0
  1031                           
  1032  0070                     ?_ProcessModuleFunctionalit:	
  1033                           ; 0 bytes @ 0x0
  1034                           
  1035  0070                     ??_ProcessModuleFunctionalit:	
  1036                           ; 0 bytes @ 0x0
  1037                           
  1038  0070                     ?_ProcessCommand:	
  1039                           ; 0 bytes @ 0x0
  1040                           
  1041  0070                     ?_ProcessStateChangedCommon:	
  1042                           ; 0 bytes @ 0x0
  1043                           
  1044  0070                     ??_ProcessStateChangedCommon:	
  1045                           ; 0 bytes @ 0x0
  1046                           
  1047  0070                     ?_CommonInit:	
  1048                           ; 0 bytes @ 0x0
  1049                           
  1050  0070                     ?__unlock:	
  1051                           ; 0 bytes @ 0x0
  1052                           
  1053  0070                     ??__unlock:	
  1054                           ; 0 bytes @ 0x0
  1055                           
  1056  0070                     ?_CheckI2cAsSlave:	
  1057                           ; 0 bytes @ 0x0
  1058                           
  1059  0070                     ??_CheckI2cAsSlave:	
  1060                           ; 0 bytes @ 0x0
  1061                           
  1062  0070                     ?_main:	
  1063                           ; 0 bytes @ 0x0
  1064                           
  1065  0070                     ?_HEFLASH_writeBlock:	
  1066                           ; 0 bytes @ 0x0
  1067                           
  1068  0070                     ?_HEFLASH_readByte:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0070                     ?_HEFLASH_readBlock:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0070                     ?___lbmod:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0070                     SetDutyCyclePWM@green:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0070                     HEFLASH_writeBlock@data:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0070                     HEFLASH_readBlock@radd:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0070                     HEFLASH_readByte@offset:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0070                     ___lbmod@divisor:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092                           
  1093                           ; 1 bytes @ 0x0
  1094  0070                     	ds	1
  1095  0071                     ??_HEFLASH_readByte:	
  1096  0071                     ??___lbmod:	
  1097                           ; 0 bytes @ 0x1
  1098                           
  1099  0071                     SetDutyCyclePWM@blue:	
  1100                           ; 0 bytes @ 0x1
  1101                           
  1102  0071                     HEFLASH_writeBlock@count:	
  1103                           ; 1 bytes @ 0x1
  1104                           
  1105  0071                     HEFLASH_readBlock@count:	
  1106                           ; 1 bytes @ 0x1
  1107                           
  1108                           
  1109                           ; 1 bytes @ 0x1
  1110  0071                     	ds	1
  1111  0072                     ??_HEFLASH_writeBlock:	
  1112  0072                     ??_HEFLASH_readBlock:	
  1113                           ; 0 bytes @ 0x2
  1114                           
  1115  0072                     ??_SetDutyCyclePWM:	
  1116                           ; 0 bytes @ 0x2
  1117                           
  1118  0072                     CheckI2cAsSlave@value:	
  1119                           ; 0 bytes @ 0x2
  1120                           
  1121                           
  1122                           ; 1 bytes @ 0x2
  1123  0072                     	ds	1
  1124  0073                     ___lbmod@dividend:	
  1125                           
  1126                           ; 1 bytes @ 0x3
  1127  0073                     	ds	1
  1128  0074                     HEFLASH_writeBlock@radd:	
  1129  0074                     ___lbmod@counter:	
  1130                           ; 1 bytes @ 0x4
  1131                           
  1132  0074                     _SetDutyCyclePWM$71:	
  1133                           ; 1 bytes @ 0x4
  1134                           
  1135  0074                     HEFLASH_readBlock@add:	
  1136                           ; 2 bytes @ 0x4
  1137                           
  1138                           
  1139                           ; 2 bytes @ 0x4
  1140  0074                     	ds	1
  1141  0075                     ___lbmod@rem:	
  1142  0075                     HEFLASH_writeBlock@add:	
  1143                           ; 1 bytes @ 0x5
  1144                           
  1145                           
  1146                           ; 2 bytes @ 0x5
  1147  0075                     	ds	1
  1148  0076                     HEFLASH_readBlock@buffer:	
  1149  0076                     _SetDutyCyclePWM$72:	
  1150                           ; 1 bytes @ 0x6
  1151                           
  1152                           
  1153                           ; 2 bytes @ 0x6
  1154  0076                     	ds	1
  1155  0077                     ??_ProcessCommand:	
  1156  0077                     HEFLASH_readByte@add:	
  1157                           ; 0 bytes @ 0x7
  1158                           
  1159                           
  1160                           ; 2 bytes @ 0x7
  1161  0077                     	ds	1
  1162  0078                     _SetDutyCyclePWM$73:	
  1163                           
  1164                           ; 2 bytes @ 0x8
  1165  0078                     	ds	1
  1166  0079                     HEFLASH_readByte@radd:	
  1167                           
  1168                           ; 1 bytes @ 0x9
  1169  0079                     	ds	1
  1170  007A                     ??_CommonInit:	
  1171  007A                     SetDutyCyclePWM@red:	
  1172                           ; 0 bytes @ 0xA
  1173                           
  1174                           
  1175                           ; 1 bytes @ 0xA
  1176  007A                     	ds	1
  1177  007B                     ?_SetColor:	
  1178  007B                     ??_SetWhiteValue:	
  1179                           ; 0 bytes @ 0xB
  1180                           
  1181  007B                     SetColor@pwmPeriod:	
  1182                           ; 0 bytes @ 0xB
  1183                           
  1184                           
  1185                           ; 1 bytes @ 0xB
  1186  007B                     	ds	1
  1187  007C                     SetColor@blackAndWhite:	
  1188                           
  1189                           ; 1 bytes @ 0xC
  1190  007C                     	ds	1
  1191  007D                     SetWhiteValue@value:	
  1192                           
  1193                           ; 1 bytes @ 0xD
  1194  007D                     	ds	1
  1195  007E                     ??_main:	
  1196                           
  1197                           	psect	cstackBANK0
  1198  0029                     __pcstackBANK0:	
  1199                           ; 0 bytes @ 0xE
  1200                           
  1201  0029                     ??_SetColor:	
  1202                           
  1203                           ; 0 bytes @ 0x0
  1204  0029                     	ds	3
  1205  002C                     SetColor@i:	
  1206                           
  1207                           ; 1 bytes @ 0x3
  1208  002C                     	ds	1
  1209  002D                     SetColor@value:	
  1210                           
  1211                           ; 2 bytes @ 0x4
  1212  002D                     	ds	2
  1213  002F                     ??_ProcessStateChangedModuleTypeSpecific:	
  1214                           
  1215                           ; 0 bytes @ 0x6
  1216  002F                     	ds	1
  1217  0030                     ProcessStateChangedModuleTypeSpecific@g_mode:	
  1218                           
  1219                           ; 1 bytes @ 0x7
  1220  0030                     	ds	1
  1221                           
  1222                           	psect	maintext
  1223  050A                     __pmaintext:	
  1224 ;;
  1225 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1226 ;;
  1227 ;; *************** function _main *****************
  1228 ;; Defined at:
  1229 ;;		line 87 in file "../common/main.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;		None
  1234 ;; Return value:  Size  Location     Type
  1235 ;;		None               void
  1236 ;; Registers used:
  1237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : 17F/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1
  1243 ;;      Params:         0       0       0
  1244 ;;      Locals:         0       0       0
  1245 ;;      Temps:          0       0       0
  1246 ;;      Totals:         0       0       0
  1247 ;;Total ram usage:        0 bytes
  1248 ;; Hardware stack levels required when called:    3
  1249 ;; This function calls:
  1250 ;;		_CheckI2cAsSlave
  1251 ;;		_CommonInit
  1252 ;;		_ModuleTypeSpecificInit
  1253 ;;		_ProcessCommand
  1254 ;;		_ProcessModuleFunctionalit
  1255 ;;		_ProcessStateChangedCommon
  1256 ;;		_ProcessStateChangedModuleTypeSpecific
  1257 ;; This function is called by:
  1258 ;;		Startup code after reset
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           
  1263                           ;psect for function _main
  1264  050A                     _main:	
  1265                           
  1266                           ;main.c: 89: INTCONbits.GIE = 0;
  1267                           
  1268                           ;incstack = 0
  1269                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1270  050A  138B               	bcf	11,7	;volatile
  1271                           
  1272                           ;main.c: 91: OSCCONbits.IRCF = 0b1111;
  1273  050B  3078               	movlw	120
  1274  050C  0021               	movlb	1	; select bank1
  1275  050D  0499               	iorwf	25,f	;volatile
  1276  050E                     l416:	
  1277                           ;main.c: 92: while (!OSCSTATbits.HFIOFS);
  1278                           
  1279  050E  1C1A               	btfss	26,0	;volatile
  1280  050F  2D0E               	goto	l416
  1281                           
  1282                           ;main.c: 94: g_persistant.mode = 1;
  1283  0510  0020               	movlb	0	; select bank0
  1284  0511  01A7               	clrf	_g_persistant+1
  1285  0512  0AA7               	incf	_g_persistant+1,f
  1286                           
  1287                           ;main.c: 95: g_persistant.bootLoaderCheck = 0;
  1288  0513  01A6               	clrf	_g_persistant
  1289                           
  1290                           ;main.c: 96: CommonInit();
  1291  0514  24E5               	fcall	_CommonInit
  1292                           
  1293                           ;main.c: 97: ModuleTypeSpecificInit();
  1294  0515  24CB               	fcall	_ModuleTypeSpecificInit
  1295  0516                     l1869:	
  1296                           ;main.c: 99: while(1)
  1297                           
  1298                           
  1299                           ;main.c: 100: {
  1300                           ;main.c: 101: CheckI2cAsSlave();
  1301  0516  2648               	fcall	_CheckI2cAsSlave
  1302                           
  1303                           ;main.c: 102: if (g_commandRecieved)
  1304  0517  0020               	movlb	0	; select bank0
  1305  0518  0822               	movf	_g_commandRecieved,w
  1306  0519  1903               	btfsc	3,2
  1307  051A  2D1D               	goto	l1875
  1308                           
  1309                           ;main.c: 103: ProcessCommand();
  1310  051B  25B2               	fcall	_ProcessCommand
  1311  051C  0020               	movlb	0	; select bank0
  1312  051D                     l1875:	
  1313                           
  1314                           ;main.c: 105: ProcessModuleFunctionalit();
  1315  051D  24C9               	fcall	_ProcessModuleFunctionalit
  1316                           
  1317                           ;main.c: 107: if (g_stateChanged)
  1318  051E  0020               	movlb	0	; select bank0
  1319  051F  0831               	movf	_g_stateChanged,w
  1320  0520  1903               	btfsc	3,2
  1321  0521  2D16               	goto	l1869
  1322                           
  1323                           ;main.c: 108: {
  1324                           ;main.c: 109: ProcessStateChangedModuleTypeSpecific();
  1325  0522  2563               	fcall	_ProcessStateChangedModuleTypeSpecific
  1326                           
  1327                           ;main.c: 110: ProcessStateChangedCommon();
  1328  0523  24CD               	fcall	_ProcessStateChangedCommon
  1329  0524  0020               	movlb	0	; select bank0
  1330  0525  2D16               	goto	l1869
  1331  0526                     __end_of_main:	
  1332                           
  1333                           	psect	text1
  1334  0563                     __ptext1:	
  1335 ;; *************** function _ProcessStateChangedModuleTypeSpecific *****************
  1336 ;; Defined at:
  1337 ;;		line 79 in file "moduleTypeSpecific.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  g_mode          1    7[BANK0 ] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;		None               void
  1344 ;; Registers used:
  1345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1
  1351 ;;      Params:         0       0       0
  1352 ;;      Locals:         0       1       0
  1353 ;;      Temps:          0       1       0
  1354 ;;      Totals:         0       2       0
  1355 ;;Total ram usage:        2 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    2
  1358 ;; This function calls:
  1359 ;;		_SetColor
  1360 ;;		_SetWhiteValue
  1361 ;; This function is called by:
  1362 ;;		_main
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           
  1367                           ;psect for function _ProcessStateChangedModuleTypeSpecific
  1368  0563                     _ProcessStateChangedModuleTypeSpecific:	
  1369                           
  1370                           ;moduleTypeSpecific.c: 81: unsigned char g_mode = MODE_RED_TO_RED;
  1371                           
  1372                           ;incstack = 0
  1373                           ; Regs used in _ProcessStateChangedModuleTypeSpecific: [wreg-fsr0h+status,2+status,0+pcl
      +                          ath+cstack]
  1374  0563  0020               	movlb	0	; select bank0
  1375  0564  01B0               	clrf	ProcessStateChangedModuleTypeSpecific@g_mode
  1376  0565  0AB0               	incf	ProcessStateChangedModuleTypeSpecific@g_mode,f
  1377                           
  1378                           ;moduleTypeSpecific.c: 82: switch (g_mode)
  1379  0566  2D7E               	goto	l1707
  1380  0567                     l1699:	
  1381                           ;moduleTypeSpecific.c: 83: {
  1382                           ;moduleTypeSpecific.c: 84: case MODE_RED_TO_RED:
  1383                           
  1384                           
  1385                           ;moduleTypeSpecific.c: 85: SetColor(g_state, 85, 1);
  1386  0567  3055               	movlw	85
  1387  0568  00AF               	movwf	??_ProcessStateChangedModuleTypeSpecific
  1388  0569  082F               	movf	??_ProcessStateChangedModuleTypeSpecific,w
  1389  056A  00FB               	movwf	SetColor@pwmPeriod
  1390  056B  01FC               	clrf	SetColor@blackAndWhite
  1391  056C  0AFC               	incf	SetColor@blackAndWhite,f
  1392  056D  0828               	movf	_g_state,w
  1393  056E  26F9               	fcall	_SetColor
  1394                           
  1395                           ;moduleTypeSpecific.c: 86: break;
  1396  056F  0008               	return
  1397  0570                     l1701:	
  1398                           ;moduleTypeSpecific.c: 87: case MODE_RED_TO_PURPLE:
  1399                           
  1400                           
  1401                           ;moduleTypeSpecific.c: 88: SetColor(g_state, 102, 1);
  1402  0570  3066               	movlw	102
  1403  0571  0020               	movlb	0	; select bank0
  1404  0572  00AF               	movwf	??_ProcessStateChangedModuleTypeSpecific
  1405  0573  082F               	movf	??_ProcessStateChangedModuleTypeSpecific,w
  1406  0574  00FB               	movwf	SetColor@pwmPeriod
  1407  0575  01FC               	clrf	SetColor@blackAndWhite
  1408  0576  0AFC               	incf	SetColor@blackAndWhite,f
  1409  0577  0828               	movf	_g_state,w
  1410  0578  26F9               	fcall	_SetColor
  1411                           
  1412                           ;moduleTypeSpecific.c: 89: break;
  1413  0579  0008               	return
  1414  057A                     l1703:	
  1415                           ;moduleTypeSpecific.c: 90: default:
  1416                           
  1417                           
  1418                           ;moduleTypeSpecific.c: 91: SetWhiteValue(g_state);
  1419  057A  0020               	movlb	0	; select bank0
  1420  057B  0828               	movf	_g_state,w
  1421  057C  24D9               	fcall	_SetWhiteValue
  1422                           
  1423                           ;moduleTypeSpecific.c: 93: }
  1424                           
  1425                           ;moduleTypeSpecific.c: 92: break;
  1426  057D  0008               	return
  1427  057E                     l1707:	
  1428  057E  0020               	movlb	0	; select bank0
  1429  057F  0830               	movf	ProcessStateChangedModuleTypeSpecific@g_mode,w
  1430                           
  1431                           ; Switch size 1, requested type "space"
  1432                           ; Number of cases is 2, Range of values is 1 to 2
  1433                           ; switch strategies available:
  1434                           ; Name         Instructions Cycles
  1435                           ; simple_byte            7     4 (average)
  1436                           ; direct_byte           13     9 (fixed)
  1437                           ; jumptable            263     9 (fixed)
  1438                           ;	Chosen strategy is simple_byte
  1439  0580  3A01               	xorlw	1	; case 1
  1440  0581  1903               	skipnz
  1441  0582  2D67               	goto	l1699
  1442  0583  3A03               	xorlw	3	; case 2
  1443  0584  1903               	skipnz
  1444  0585  2D70               	goto	l1701
  1445  0586  2D7A               	goto	l1703
  1446  0587  0008               	return
  1447  0588                     __end_of_ProcessStateChangedModuleTypeSpecific:	
  1448                           
  1449                           	psect	text2
  1450  04D9                     __ptext2:	
  1451 ;; *************** function _SetWhiteValue *****************
  1452 ;; Defined at:
  1453 ;;		line 59 in file "moduleTypeSpecific.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  value           1    wreg     unsigned char 
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;  value           1   13[COMMON] unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;		None               void
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0, pclath, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1
  1467 ;;      Params:         0       0       0
  1468 ;;      Locals:         1       0       0
  1469 ;;      Temps:          2       0       0
  1470 ;;      Totals:         3       0       0
  1471 ;;Total ram usage:        3 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    1
  1474 ;; This function calls:
  1475 ;;		_SetDutyCyclePWM
  1476 ;; This function is called by:
  1477 ;;		_ProcessStateChangedModuleTypeSpecific
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           
  1482                           ;psect for function _SetWhiteValue
  1483  04D9                     _SetWhiteValue:	
  1484                           
  1485                           ;incstack = 0
  1486                           ; Regs used in _SetWhiteValue: [wreg+status,2+status,0+pclath+cstack]
  1487                           ;SetWhiteValue@value stored from wreg
  1488  04D9  00FD               	movwf	SetWhiteValue@value
  1489                           
  1490                           ;moduleTypeSpecific.c: 61: SetDutyCyclePWM(value, value, value);
  1491  04DA  087D               	movf	SetWhiteValue@value,w
  1492  04DB  00FB               	movwf	??_SetWhiteValue
  1493  04DC  087B               	movf	??_SetWhiteValue,w
  1494  04DD  00F0               	movwf	SetDutyCyclePWM@green
  1495  04DE  087D               	movf	SetWhiteValue@value,w
  1496  04DF  00FC               	movwf	??_SetWhiteValue+1
  1497  04E0  087C               	movf	??_SetWhiteValue+1,w
  1498  04E1  00F1               	movwf	SetDutyCyclePWM@blue
  1499  04E2  087D               	movf	SetWhiteValue@value,w
  1500  04E3  2526               	fcall	_SetDutyCyclePWM
  1501  04E4  0008               	return
  1502  04E5                     __end_of_SetWhiteValue:	
  1503                           
  1504                           	psect	text3
  1505  06F9                     __ptext3:	
  1506 ;; *************** function _SetColor *****************
  1507 ;; Defined at:
  1508 ;;		line 22 in file "moduleTypeSpecific.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  i               1    wreg     unsigned char 
  1511 ;;  pwmPeriod       1   11[COMMON] unsigned char 
  1512 ;;  blackAndWhit    1   12[COMMON] unsigned char 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  i               1    3[BANK0 ] unsigned char 
  1515 ;;  value           2    4[BANK0 ] unsigned int 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;		None               void
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0, pclath, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1
  1525 ;;      Params:         2       0       0
  1526 ;;      Locals:         0       3       0
  1527 ;;      Temps:          0       3       0
  1528 ;;      Totals:         2       6       0
  1529 ;;Total ram usage:        8 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    1
  1532 ;; This function calls:
  1533 ;;		_SetDutyCyclePWM
  1534 ;;		___lbmod
  1535 ;; This function is called by:
  1536 ;;		_ProcessStateChangedModuleTypeSpecific
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _SetColor
  1542  06F9                     _SetColor:	
  1543                           
  1544                           ;incstack = 0
  1545                           ; Regs used in _SetColor: [wreg+status,2+status,0+pclath+cstack]
  1546                           ;SetColor@i stored from wreg
  1547  06F9  0020               	movlb	0	; select bank0
  1548  06FA  00AC               	movwf	SetColor@i
  1549                           
  1550                           ;moduleTypeSpecific.c: 24: unsigned value = i % pwmPeriod;
  1551  06FB  087B               	movf	SetColor@pwmPeriod,w
  1552  06FC  00A9               	movwf	??_SetColor
  1553  06FD  0829               	movf	??_SetColor,w
  1554  06FE  00F0               	movwf	___lbmod@divisor
  1555  06FF  082C               	movf	SetColor@i,w
  1556  0700  2544               	fcall	___lbmod
  1557  0701  0020               	movlb	0	; select bank0
  1558  0702  00AA               	movwf	??_SetColor+1
  1559  0703  01AB               	clrf	??_SetColor+2
  1560  0704  082A               	movf	??_SetColor+1,w
  1561  0705  00AD               	movwf	SetColor@value
  1562  0706  082B               	movf	??_SetColor+2,w
  1563  0707  00AE               	movwf	SetColor@value+1
  1564                           
  1565                           ;moduleTypeSpecific.c: 25: if (i == 0)
  1566  0708  08AC               	movf	SetColor@i,f
  1567  0709  1D03               	skipz
  1568  070A  2F13               	goto	l1491
  1569                           
  1570                           ;moduleTypeSpecific.c: 26: {
  1571                           ;moduleTypeSpecific.c: 27: if (blackAndWhite)
  1572  070B  087C               	movf	SetColor@blackAndWhite,w
  1573  070C  1903               	btfsc	3,2
  1574  070D  2F13               	goto	l1491
  1575                           
  1576                           ;moduleTypeSpecific.c: 28: {
  1577                           ;moduleTypeSpecific.c: 29: SetDutyCyclePWM(0, 0, 0);
  1578  070E  01F0               	clrf	SetDutyCyclePWM@green
  1579  070F  01F1               	clrf	SetDutyCyclePWM@blue
  1580  0710  3000               	movlw	0
  1581  0711  2526               	fcall	_SetDutyCyclePWM
  1582                           
  1583                           ;moduleTypeSpecific.c: 30: return;
  1584  0712  0008               	return
  1585  0713                     l1491:	
  1586                           
  1587                           ;moduleTypeSpecific.c: 31: }
  1588                           ;moduleTypeSpecific.c: 32: }
  1589                           ;moduleTypeSpecific.c: 34: if (i < pwmPeriod)
  1590  0713  087B               	movf	SetColor@pwmPeriod,w
  1591  0714  0020               	movlb	0	; select bank0
  1592  0715  022C               	subwf	SetColor@i,w
  1593  0716  1803               	skipnc
  1594  0717  2F23               	goto	l1497
  1595                           
  1596                           ;moduleTypeSpecific.c: 35: {
  1597                           ;moduleTypeSpecific.c: 37: SetDutyCyclePWM(pwmPeriod -1 - value, value, 0);
  1598  0718  082D               	movf	SetColor@value,w
  1599  0719  00A9               	movwf	??_SetColor
  1600  071A  0829               	movf	??_SetColor,w
  1601  071B  00F0               	movwf	SetDutyCyclePWM@green
  1602  071C  01F1               	clrf	SetDutyCyclePWM@blue
  1603  071D  032D               	decf	SetColor@value,w
  1604  071E  3AFF               	xorlw	255
  1605  071F  077B               	addwf	SetColor@pwmPeriod,w
  1606  0720  3EFF               	addlw	255
  1607  0721  2526               	fcall	_SetDutyCyclePWM
  1608                           
  1609                           ;moduleTypeSpecific.c: 38: return;
  1610  0722  0008               	return
  1611  0723                     l1497:	
  1612                           
  1613                           ;moduleTypeSpecific.c: 39: }
  1614                           ;moduleTypeSpecific.c: 41: if (i < pwmPeriod * 2)
  1615  0723  087B               	movf	SetColor@pwmPeriod,w
  1616  0724  0020               	movlb	0	; select bank0
  1617  0725  00A9               	movwf	??_SetColor
  1618  0726  01AA               	clrf	??_SetColor+1
  1619  0727  35A9               	lslf	??_SetColor,f
  1620  0728  0DAA               	rlf	??_SetColor+1,f
  1621  0729  082A               	movf	??_SetColor+1,w
  1622  072A  3A80               	xorlw	128
  1623  072B  3C80               	sublw	128
  1624  072C  1D03               	skipz
  1625  072D  2F30               	goto	u735
  1626  072E  0829               	movf	??_SetColor,w
  1627  072F  022C               	subwf	SetColor@i,w
  1628  0730                     u735:	
  1629  0730  1803               	skipnc
  1630  0731  2F41               	goto	l1503
  1631                           
  1632                           ;moduleTypeSpecific.c: 42: {
  1633                           ;moduleTypeSpecific.c: 43: SetDutyCyclePWM(0, pwmPeriod -1 - value, value);
  1634  0732  0020               	movlb	0	; select bank0
  1635  0733  032D               	decf	SetColor@value,w
  1636  0734  3AFF               	xorlw	255
  1637  0735  077B               	addwf	SetColor@pwmPeriod,w
  1638  0736  3EFF               	addlw	255
  1639  0737  00A9               	movwf	??_SetColor
  1640  0738  0829               	movf	??_SetColor,w
  1641  0739  00F0               	movwf	SetDutyCyclePWM@green
  1642  073A  082D               	movf	SetColor@value,w
  1643  073B  00AA               	movwf	??_SetColor+1
  1644  073C  082A               	movf	??_SetColor+1,w
  1645  073D  00F1               	movwf	SetDutyCyclePWM@blue
  1646  073E  3000               	movlw	0
  1647  073F  2526               	fcall	_SetDutyCyclePWM
  1648                           
  1649                           ;moduleTypeSpecific.c: 44: return;
  1650  0740  0008               	return
  1651  0741                     l1503:	
  1652                           
  1653                           ;moduleTypeSpecific.c: 45: }
  1654                           ;moduleTypeSpecific.c: 47: if (i < 255 || !blackAndWhite)
  1655  0741  0020               	movlb	0	; select bank0
  1656  0742  082C               	movf	SetColor@i,w
  1657  0743  3AFF               	xorlw	255
  1658  0744  1D03               	skipz
  1659  0745  2F49               	goto	l1507
  1660  0746  08FC               	movf	SetColor@blackAndWhite,f
  1661  0747  1D03               	skipz
  1662  0748  2F66               	goto	l1519
  1663  0749                     l1507:	
  1664                           
  1665                           ;moduleTypeSpecific.c: 48: {
  1666                           ;moduleTypeSpecific.c: 49: if (!blackAndWhite && i == 255 && value == 0)
  1667  0749  08FC               	movf	SetColor@blackAndWhite,f
  1668  074A  1D03               	skipz
  1669  074B  2F5B               	goto	l1515
  1670  074C  082C               	movf	SetColor@i,w
  1671  074D  3AFF               	xorlw	255
  1672  074E  1D03               	skipz
  1673  074F  2F5B               	goto	l1515
  1674  0750  082E               	movf	SetColor@value+1,w
  1675  0751  042D               	iorwf	SetColor@value,w
  1676  0752  1D03               	skipz
  1677  0753  2F5B               	goto	l1515
  1678                           
  1679                           ;moduleTypeSpecific.c: 50: value = pwmPeriod-1;
  1680  0754  087B               	movf	SetColor@pwmPeriod,w
  1681  0755  3EFF               	addlw	255
  1682  0756  00AD               	movwf	SetColor@value
  1683  0757  30FF               	movlw	255
  1684  0758  1803               	skipnc
  1685  0759  3000               	movlw	0
  1686  075A  00AE               	movwf	SetColor@value+1
  1687  075B                     l1515:	
  1688                           
  1689                           ;moduleTypeSpecific.c: 52: SetDutyCyclePWM(value, 0, pwmPeriod -1 - value);
  1690  075B  01F0               	clrf	SetDutyCyclePWM@green
  1691  075C  032D               	decf	SetColor@value,w
  1692  075D  3AFF               	xorlw	255
  1693  075E  077B               	addwf	SetColor@pwmPeriod,w
  1694  075F  3EFF               	addlw	255
  1695  0760  00A9               	movwf	??_SetColor
  1696  0761  0829               	movf	??_SetColor,w
  1697  0762  00F1               	movwf	SetDutyCyclePWM@blue
  1698  0763  082D               	movf	SetColor@value,w
  1699  0764  2526               	fcall	_SetDutyCyclePWM
  1700                           
  1701                           ;moduleTypeSpecific.c: 53: return;
  1702  0765  0008               	return
  1703  0766                     l1519:	
  1704                           
  1705                           ;moduleTypeSpecific.c: 54: }
  1706                           ;moduleTypeSpecific.c: 56: SetDutyCyclePWM(28, 28, 28);
  1707  0766  301C               	movlw	28
  1708  0767  0020               	movlb	0	; select bank0
  1709  0768  00A9               	movwf	??_SetColor
  1710  0769  0829               	movf	??_SetColor,w
  1711  076A  00F0               	movwf	SetDutyCyclePWM@green
  1712  076B  301C               	movlw	28
  1713  076C  00AA               	movwf	??_SetColor+1
  1714  076D  082A               	movf	??_SetColor+1,w
  1715  076E  00F1               	movwf	SetDutyCyclePWM@blue
  1716  076F  301C               	movlw	28
  1717  0770  2526               	fcall	_SetDutyCyclePWM
  1718  0771  0008               	return
  1719  0772                     __end_of_SetColor:	
  1720                           
  1721                           	psect	text4
  1722  0544                     __ptext4:	
  1723 ;; *************** function ___lbmod *****************
  1724 ;; Defined at:
  1725 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lbmod.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  dividend        1    wreg     unsigned char 
  1728 ;;  divisor         1    0[COMMON] unsigned char 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  dividend        1    3[COMMON] unsigned char 
  1731 ;;  rem             1    5[COMMON] unsigned char 
  1732 ;;  counter         1    4[COMMON] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      unsigned char 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1
  1742 ;;      Params:         1       0       0
  1743 ;;      Locals:         3       0       0
  1744 ;;      Temps:          2       0       0
  1745 ;;      Totals:         6       0       0
  1746 ;;Total ram usage:        6 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; This function calls:
  1749 ;;		Nothing
  1750 ;; This function is called by:
  1751 ;;		_SetColor
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           
  1756                           ;psect for function ___lbmod
  1757  0544                     ___lbmod:	
  1758                           
  1759                           ;incstack = 0
  1760                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  1761                           ;___lbmod@dividend stored from wreg
  1762  0544  00F3               	movwf	___lbmod@dividend
  1763  0545  3008               	movlw	8
  1764  0546  00F1               	movwf	??___lbmod
  1765  0547  0871               	movf	??___lbmod,w
  1766  0548  00F4               	movwf	___lbmod@counter
  1767  0549  01F5               	clrf	___lbmod@rem
  1768  054A                     l1469:	
  1769  054A  0873               	movf	___lbmod@dividend,w
  1770  054B  00F1               	movwf	??___lbmod
  1771  054C  3007               	movlw	7
  1772  054D                     u675:	
  1773  054D  36F1               	lsrf	??___lbmod,f
  1774  054E  0B89               	decfsz	9,f
  1775  054F  2D4D               	goto	u675
  1776  0550  3575               	lslf	___lbmod@rem,w
  1777  0551  0471               	iorwf	??___lbmod,w
  1778  0552  00F2               	movwf	??___lbmod+1
  1779  0553  0872               	movf	??___lbmod+1,w
  1780  0554  00F5               	movwf	___lbmod@rem
  1781  0555  1003               	clrc
  1782  0556  0DF3               	rlf	___lbmod@dividend,f
  1783  0557  0870               	movf	___lbmod@divisor,w
  1784  0558  0275               	subwf	___lbmod@rem,w
  1785  0559  1C03               	skipc
  1786  055A  2D5D               	goto	l770
  1787  055B  0870               	movf	___lbmod@divisor,w
  1788  055C  02F5               	subwf	___lbmod@rem,f
  1789  055D                     l770:	
  1790  055D  3001               	movlw	1
  1791  055E  02F4               	subwf	___lbmod@counter,f
  1792  055F  1D03               	btfss	3,2
  1793  0560  2D4A               	goto	l1469
  1794  0561  0875               	movf	___lbmod@rem,w
  1795  0562  0008               	return
  1796  0563                     __end_of___lbmod:	
  1797                           
  1798                           	psect	text5
  1799  0526                     __ptext5:	
  1800 ;; *************** function _SetDutyCyclePWM *****************
  1801 ;; Defined at:
  1802 ;;		line 15 in file "moduleTypeSpecific.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  red             1    wreg     unsigned char 
  1805 ;;  green           1    0[COMMON] unsigned char 
  1806 ;;  blue            1    1[COMMON] unsigned char 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  red             1   10[COMMON] unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;		None               void
  1811 ;; Registers used:
  1812 ;;		wreg, status,2, status,0
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMMON   BANK0   BANK1
  1818 ;;      Params:         2       0       0
  1819 ;;      Locals:         7       0       0
  1820 ;;      Temps:          2       0       0
  1821 ;;      Totals:        11       0       0
  1822 ;;Total ram usage:       11 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_SetColor
  1828 ;;		_SetWhiteValue
  1829 ;;		_SetRed
  1830 ;;		_SetGreen
  1831 ;;		_SetBlue
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           
  1836                           ;psect for function _SetDutyCyclePWM
  1837  0526                     _SetDutyCyclePWM:	
  1838                           
  1839                           ;incstack = 0
  1840                           ; Regs used in _SetDutyCyclePWM: [wreg+status,2+status,0]
  1841                           ;SetDutyCyclePWM@red stored from wreg
  1842  0526  00FA               	movwf	SetDutyCyclePWM@red
  1843  0527  0870               	movf	SetDutyCyclePWM@green,w
  1844  0528  00F2               	movwf	??_SetDutyCyclePWM
  1845  0529  01F3               	clrf	??_SetDutyCyclePWM+1
  1846  052A  0872               	movf	??_SetDutyCyclePWM,w
  1847  052B  00F4               	movwf	_SetDutyCyclePWM$71
  1848  052C  0873               	movf	??_SetDutyCyclePWM+1,w
  1849  052D  00F5               	movwf	_SetDutyCyclePWM$71+1
  1850                           
  1851                           ;moduleTypeSpecific.c: 18: (PWM2DCH = 0 ? 255 - red : red);
  1852  052E  0874               	movf	_SetDutyCyclePWM$71,w
  1853  052F  002C               	movlb	12	; select bank12
  1854  0530  0092               	movwf	18	;volatile
  1855  0531  087A               	movf	SetDutyCyclePWM@red,w
  1856  0532  00F2               	movwf	??_SetDutyCyclePWM
  1857  0533  01F3               	clrf	??_SetDutyCyclePWM+1
  1858  0534  0872               	movf	??_SetDutyCyclePWM,w
  1859  0535  00F6               	movwf	_SetDutyCyclePWM$72
  1860  0536  0873               	movf	??_SetDutyCyclePWM+1,w
  1861  0537  00F7               	movwf	_SetDutyCyclePWM$72+1
  1862                           
  1863                           ;moduleTypeSpecific.c: 19: (PWM3DCH = 0 ? 255 - blue : blue);
  1864  0538  0876               	movf	_SetDutyCyclePWM$72,w
  1865  0539  0095               	movwf	21	;volatile
  1866  053A  0871               	movf	SetDutyCyclePWM@blue,w
  1867  053B  00F2               	movwf	??_SetDutyCyclePWM
  1868  053C  01F3               	clrf	??_SetDutyCyclePWM+1
  1869  053D  0872               	movf	??_SetDutyCyclePWM,w
  1870  053E  00F8               	movwf	_SetDutyCyclePWM$73
  1871  053F  0873               	movf	??_SetDutyCyclePWM+1,w
  1872  0540  00F9               	movwf	_SetDutyCyclePWM$73+1
  1873  0541  0878               	movf	_SetDutyCyclePWM$73,w
  1874  0542  0098               	movwf	24	;volatile
  1875  0543  0008               	return
  1876  0544                     __end_of_SetDutyCyclePWM:	
  1877                           
  1878                           	psect	text6
  1879  04CD                     __ptext6:	
  1880 ;; *************** function _ProcessStateChangedCommon *****************
  1881 ;; Defined at:
  1882 ;;		line 61 in file "../common/common.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;		None               void
  1889 ;; Registers used:
  1890 ;;		status,2
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1
  1896 ;;      Params:         0       0       0
  1897 ;;      Locals:         0       0       0
  1898 ;;      Temps:          0       0       0
  1899 ;;      Totals:         0       0       0
  1900 ;;Total ram usage:        0 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_main
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           
  1910                           ;psect for function _ProcessStateChangedCommon
  1911  04CD                     _ProcessStateChangedCommon:	
  1912                           
  1913                           ;common.c: 63: g_stateChanged = 0;
  1914                           
  1915                           ;incstack = 0
  1916                           ; Regs used in _ProcessStateChangedCommon: [status,2]
  1917  04CD  0020               	movlb	0	; select bank0
  1918  04CE  01B1               	clrf	_g_stateChanged
  1919  04CF  0008               	return
  1920  04D0                     __end_of_ProcessStateChangedCommon:	
  1921                           
  1922                           	psect	text7
  1923  04C9                     __ptext7:	
  1924 ;; *************** function _ProcessModuleFunctionalit *****************
  1925 ;; Defined at:
  1926 ;;		line 101 in file "moduleTypeSpecific.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;		None
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;		None               void
  1933 ;; Registers used:
  1934 ;;		None
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1
  1940 ;;      Params:         0       0       0
  1941 ;;      Locals:         0       0       0
  1942 ;;      Temps:          0       0       0
  1943 ;;      Totals:         0       0       0
  1944 ;;Total ram usage:        0 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; This function calls:
  1947 ;;		Nothing
  1948 ;; This function is called by:
  1949 ;;		_main
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           
  1954                           ;psect for function _ProcessModuleFunctionalit
  1955  04C9                     _ProcessModuleFunctionalit:	
  1956                           
  1957                           ;incstack = 0
  1958                           ; Regs used in _ProcessModuleFunctionalit: []
  1959  04C9  0008               	return
  1960  04CA                     __end_of_ProcessModuleFunctionalit:	
  1961                           
  1962                           	psect	text8
  1963  05B2                     __ptext8:	
  1964 ;; *************** function _ProcessCommand *****************
  1965 ;; Defined at:
  1966 ;;		line 34 in file "../common/common.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;		None               void
  1973 ;; Registers used:
  1974 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1
  1980 ;;      Params:         0       0       0
  1981 ;;      Locals:         0       0       0
  1982 ;;      Temps:          2       0       0
  1983 ;;      Totals:         2       0       0
  1984 ;;Total ram usage:        2 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    2
  1987 ;; This function calls:
  1988 ;;		_HEFLASH_writeBlock
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function _ProcessCommand
  1996  05B2                     _ProcessCommand:	
  1997                           
  1998                           ;common.c: 36: g_commandRecieved = 0;
  1999                           
  2000                           ;incstack = 0
  2001                           ; Regs used in _ProcessCommand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2002  05B2  0020               	movlb	0	; select bank0
  2003  05B3  01A2               	clrf	_g_commandRecieved
  2004                           
  2005                           ;common.c: 38: if (COMMAND_CHANGE_MODE == g_commandInstruction )
  2006  05B4  0821               	movf	_g_commandInstruction,w
  2007  05B5  3A01               	xorlw	1
  2008  05B6  1D03               	skipz
  2009  05B7  2DCA               	goto	l1721
  2010                           
  2011                           ;common.c: 39: {
  2012                           ;common.c: 40: g_persistant.mode = g_commandValue;
  2013  05B8  0823               	movf	_g_commandValue,w
  2014  05B9  00F7               	movwf	??_ProcessCommand
  2015  05BA  0877               	movf	??_ProcessCommand,w
  2016  05BB  00A7               	movwf	_g_persistant+1
  2017                           
  2018                           ;common.c: 42: HEFLASH_writeBlock(0, (void*)&g_persistant, sizeof(g_persistant));
  2019  05BC  3026               	movlw	_g_persistant& (0+255)
  2020  05BD  00F7               	movwf	??_ProcessCommand
  2021  05BE  0877               	movf	??_ProcessCommand,w
  2022  05BF  00F0               	movwf	HEFLASH_writeBlock@data
  2023  05C0  3002               	movlw	2
  2024  05C1  00F8               	movwf	??_ProcessCommand+1
  2025  05C2  0878               	movf	??_ProcessCommand+1,w
  2026  05C3  00F1               	movwf	HEFLASH_writeBlock@count
  2027  05C4  3000               	movlw	0
  2028  05C5  2693               	fcall	_HEFLASH_writeBlock
  2029                           
  2030                           ;common.c: 44: g_stateChanged = 1;
  2031  05C6  0020               	movlb	0	; select bank0
  2032  05C7  01B1               	clrf	_g_stateChanged
  2033  05C8  0AB1               	incf	_g_stateChanged,f
  2034                           
  2035                           ;common.c: 45: }
  2036  05C9  0008               	return
  2037  05CA                     l1721:	
  2038                           
  2039                           ;common.c: 46: else if (COMMAND_FLASH_SET_BOOT_FLAG == g_commandInstruction)
  2040  05CA  0821               	movf	_g_commandInstruction,w
  2041  05CB  3A09               	xorlw	9
  2042  05CC  1D03               	skipz
  2043  05CD  0008               	return
  2044                           
  2045                           ;common.c: 47: {
  2046                           ;common.c: 48: g_persistant.bootLoaderCheck = g_commandValue;
  2047  05CE  0823               	movf	_g_commandValue,w
  2048  05CF  00F7               	movwf	??_ProcessCommand
  2049  05D0  0877               	movf	??_ProcessCommand,w
  2050  05D1  00A6               	movwf	_g_persistant
  2051                           
  2052                           ;common.c: 50: HEFLASH_writeBlock(0, (char*)&g_persistant, sizeof(g_persistant));
  2053  05D2  3026               	movlw	_g_persistant& (0+255)
  2054  05D3  00F7               	movwf	??_ProcessCommand
  2055  05D4  0877               	movf	??_ProcessCommand,w
  2056  05D5  00F0               	movwf	HEFLASH_writeBlock@data
  2057  05D6  3002               	movlw	2
  2058  05D7  00F8               	movwf	??_ProcessCommand+1
  2059  05D8  0878               	movf	??_ProcessCommand+1,w
  2060  05D9  00F1               	movwf	HEFLASH_writeBlock@count
  2061  05DA  3000               	movlw	0
  2062  05DB  2693               	fcall	_HEFLASH_writeBlock
  2063  05DC  0001               	reset	;# 
  2064  05DD  0008               	return
  2065  05DE                     __end_of_ProcessCommand:	
  2066                           
  2067                           	psect	text9
  2068  0693                     __ptext9:	
  2069 ;; *************** function _HEFLASH_writeBlock *****************
  2070 ;; Defined at:
  2071 ;;		line 16 in file "../common/HEFlash.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;  radd            1    wreg     unsigned char 
  2074 ;;  data            1    0[COMMON] PTR unsigned char 
  2075 ;;		 -> g_persistant(2), 
  2076 ;;  count           1    1[COMMON] unsigned char 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  radd            1    4[COMMON] unsigned char 
  2079 ;;  add             2    5[COMMON] unsigned int 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      unsigned char 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1
  2089 ;;      Params:         2       0       0
  2090 ;;      Locals:         3       0       0
  2091 ;;      Temps:          2       0       0
  2092 ;;      Totals:         7       0       0
  2093 ;;Total ram usage:        7 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    1
  2096 ;; This function calls:
  2097 ;;		__unlock
  2098 ;; This function is called by:
  2099 ;;		_ProcessCommand
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           
  2104                           ;psect for function _HEFLASH_writeBlock
  2105  0693                     _HEFLASH_writeBlock:	
  2106                           
  2107                           ;incstack = 0
  2108                           ; Regs used in _HEFLASH_writeBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2109                           ;HEFLASH_writeBlock@radd stored from wreg
  2110  0693  00F4               	movwf	HEFLASH_writeBlock@radd
  2111                           
  2112                           ;HEFlash.c: 19: unsigned add = radd * 16 + 0x0780;
  2113  0694  0874               	movf	HEFLASH_writeBlock@radd,w
  2114  0695  00F2               	movwf	??_HEFLASH_writeBlock
  2115  0696  01F3               	clrf	??_HEFLASH_writeBlock+1
  2116  0697  0EF2               	swapf	??_HEFLASH_writeBlock,f
  2117  0698  0EF3               	swapf	??_HEFLASH_writeBlock+1,f
  2118  0699  30F0               	movlw	240
  2119  069A  05F3               	andwf	??_HEFLASH_writeBlock+1,f
  2120  069B  0872               	movf	??_HEFLASH_writeBlock,w
  2121  069C  390F               	andlw	15
  2122  069D  04F3               	iorwf	??_HEFLASH_writeBlock+1,f
  2123  069E  30F0               	movlw	240
  2124  069F  05F2               	andwf	??_HEFLASH_writeBlock,f
  2125  06A0  0872               	movf	??_HEFLASH_writeBlock,w
  2126  06A1  3E80               	addlw	128
  2127  06A2  00F5               	movwf	HEFLASH_writeBlock@add
  2128  06A3  3007               	movlw	7
  2129  06A4  3D73               	addwfc	??_HEFLASH_writeBlock+1,w
  2130  06A5  00F6               	movwf	HEFLASH_writeBlock@add+1
  2131                           
  2132                           ;HEFlash.c: 21: if ((count > 16)||(radd >= (0x07FF-0x0780+1)/16))
  2133  06A6  3011               	movlw	17
  2134  06A7  0271               	subwf	HEFLASH_writeBlock@count,w
  2135  06A8  1803               	skipnc
  2136  06A9  0008               	return
  2137  06AA  3008               	movlw	8
  2138  06AB  0274               	subwf	HEFLASH_writeBlock@radd,w
  2139  06AC  1803               	btfsc	3,0
  2140  06AD  0008               	return
  2141                           
  2142                           ;HEFlash.c: 24: PMADR = add; PMCON1bits.CFGS = 0; PMCON1bits.FREE = 1; PMCON1bits.WREN =
      +                           1; _unlock(); PMCON1bits.WREN = 0;;
  2143                           
  2144                           ;HEFlash.c: 22: return -1;
  2145                           ;	Return value of _HEFLASH_writeBlock is never used
  2146  06AE  0876               	movf	HEFLASH_writeBlock@add+1,w
  2147  06AF  0023               	movlb	3	; select bank3
  2148  06B0  0192               	clrf	18	;volatile
  2149  06B1  0792               	addwf	18,f	;volatile
  2150  06B2  0875               	movf	HEFLASH_writeBlock@add,w
  2151  06B3  0191               	clrf	17	;volatile
  2152  06B4  0791               	addwf	17,f	;volatile
  2153  06B5  1315               	bcf	21,6	;volatile
  2154  06B6  1615               	bsf	21,4	;volatile
  2155  06B7  1515               	bsf	21,2	;volatile
  2156  06B8  24D0               	fcall	__unlock
  2157  06B9  0023               	movlb	3	; select bank3
  2158  06BA  1115               	bcf	21,2	;volatile
  2159  06BB                     l1581:	
  2160                           ;HEFlash.c: 26: while (count > 1)
  2161                           
  2162  06BB  3002               	movlw	2
  2163  06BC  0271               	subwf	HEFLASH_writeBlock@count,w
  2164  06BD  1C03               	btfss	3,0
  2165  06BE  2EE0               	goto	l1583
  2166                           
  2167                           ;HEFlash.c: 27: {
  2168                           ;HEFlash.c: 29: PMADR = add++; PMDAT = (unsigned) *data++; PMCON1bits.LWLO = 1; PMCON1bi
      +                          ts.CFGS = 0; PMCON1bits.FREE = 0; PMCON1bits.WREN = 1; _unlock();;
  2169  06BF  0876               	movf	HEFLASH_writeBlock@add+1,w
  2170  06C0  0023               	movlb	3	; select bank3
  2171  06C1  0192               	clrf	18	;volatile
  2172  06C2  0792               	addwf	18,f	;volatile
  2173  06C3  0875               	movf	HEFLASH_writeBlock@add,w
  2174  06C4  0191               	clrf	17	;volatile
  2175  06C5  0791               	addwf	17,f	;volatile
  2176  06C6  3001               	movlw	1
  2177  06C7  07F5               	addwf	HEFLASH_writeBlock@add,f
  2178  06C8  3000               	movlw	0
  2179  06C9  3DF6               	addwfc	HEFLASH_writeBlock@add+1,f
  2180  06CA  0870               	movf	HEFLASH_writeBlock@data,w
  2181  06CB  0086               	movwf	6
  2182  06CC  0187               	clrf	7
  2183  06CD  0801               	movf	1,w
  2184  06CE  00F2               	movwf	??_HEFLASH_writeBlock
  2185  06CF  01F3               	clrf	??_HEFLASH_writeBlock+1
  2186  06D0  0872               	movf	??_HEFLASH_writeBlock,w
  2187  06D1  0093               	movwf	19	;volatile
  2188  06D2  0873               	movf	??_HEFLASH_writeBlock+1,w
  2189  06D3  0094               	movwf	20	;volatile
  2190  06D4  3001               	movlw	1
  2191  06D5  00F2               	movwf	??_HEFLASH_writeBlock
  2192  06D6  0872               	movf	??_HEFLASH_writeBlock,w
  2193  06D7  07F0               	addwf	HEFLASH_writeBlock@data,f
  2194  06D8  1695               	bsf	21,5	;volatile
  2195  06D9  1315               	bcf	21,6	;volatile
  2196  06DA  1215               	bcf	21,4	;volatile
  2197  06DB  1515               	bsf	21,2	;volatile
  2198  06DC  24D0               	fcall	__unlock
  2199                           
  2200                           ;HEFlash.c: 30: count--;
  2201  06DD  3001               	movlw	1
  2202  06DE  02F1               	subwf	HEFLASH_writeBlock@count,f
  2203  06DF  2EBB               	goto	l1581
  2204  06E0                     l1583:	
  2205                           
  2206                           ;HEFlash.c: 31: }
  2207                           ;HEFlash.c: 34: PMADR = add; PMDAT = (unsigned) *data; PMCON1bits.LWLO = 0; PMCON1bits.C
      +                          FGS = 0; PMCON1bits.FREE = 0; PMCON1bits.WREN = 1; _unlock();;
  2208  06E0  0876               	movf	HEFLASH_writeBlock@add+1,w
  2209  06E1  0023               	movlb	3	; select bank3
  2210  06E2  0192               	clrf	18	;volatile
  2211  06E3  0792               	addwf	18,f	;volatile
  2212  06E4  0875               	movf	HEFLASH_writeBlock@add,w
  2213  06E5  0191               	clrf	17	;volatile
  2214  06E6  0791               	addwf	17,f	;volatile
  2215  06E7  0870               	movf	HEFLASH_writeBlock@data,w
  2216  06E8  0086               	movwf	6
  2217  06E9  0187               	clrf	7
  2218  06EA  0801               	movf	1,w
  2219  06EB  00F2               	movwf	??_HEFLASH_writeBlock
  2220  06EC  01F3               	clrf	??_HEFLASH_writeBlock+1
  2221  06ED  0872               	movf	??_HEFLASH_writeBlock,w
  2222  06EE  0093               	movwf	19	;volatile
  2223  06EF  0873               	movf	??_HEFLASH_writeBlock+1,w
  2224  06F0  0094               	movwf	20	;volatile
  2225  06F1  1295               	bcf	21,5	;volatile
  2226  06F2  1315               	bcf	21,6	;volatile
  2227  06F3  1215               	bcf	21,4	;volatile
  2228  06F4  1515               	bsf	21,2	;volatile
  2229  06F5  24D0               	fcall	__unlock
  2230                           
  2231                           ;HEFlash.c: 37: return PMCON1bits.WRERR;
  2232                           ;	Return value of _HEFLASH_writeBlock is never used
  2233  06F6  0023               	movlb	3	; select bank3
  2234  06F7  0815               	movf	21,w	;volatile
  2235  06F8  0008               	return
  2236  06F9                     __end_of_HEFLASH_writeBlock:	
  2237                           
  2238                           	psect	text10
  2239  04D0                     __ptext10:	
  2240 ;; *************** function __unlock *****************
  2241 ;; Defined at:
  2242 ;;		line 40 in file "../common/Flash.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;		None               void
  2249 ;; Registers used:
  2250 ;;		None
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1
  2256 ;;      Params:         0       0       0
  2257 ;;      Locals:         0       0       0
  2258 ;;      Temps:          0       0       0
  2259 ;;      Totals:         0       0       0
  2260 ;;Total ram usage:        0 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_HEFLASH_writeBlock
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           
  2270                           ;psect for function __unlock
  2271  04D0                     __unlock:	
  2272                           
  2273                           ;incstack = 0
  2274                           ; Regs used in __unlock: []
  2275  04D0  0023               	banksel	406	;# 
  2276  04D1  3055               	movlw	85	;# 
  2277  04D2  0096               	movwf	22	;# 
  2278  04D3  30AA               	movlw	170	;# 
  2279  04D4  0096               	movwf	22	;# 
  2280  04D5  1495               	bsf	21,1	; set WR bit ;# 
  2281  04D6  0000               	nop	;# 
  2282  04D7  0000               	nop	;# 
  2283  04D8  0008               	return
  2284  04D9                     __end_of__unlock:	
  2285                           
  2286                           	psect	text11
  2287  04CB                     __ptext11:	
  2288 ;; *************** function _ModuleTypeSpecificInit *****************
  2289 ;; Defined at:
  2290 ;;		line 96 in file "moduleTypeSpecific.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;		None               void
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0, pclath, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMMON   BANK0   BANK1
  2304 ;;      Params:         0       0       0
  2305 ;;      Locals:         0       0       0
  2306 ;;      Temps:          0       0       0
  2307 ;;      Totals:         0       0       0
  2308 ;;Total ram usage:        0 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:    1
  2311 ;; This function calls:
  2312 ;;		_PwmInit
  2313 ;; This function is called by:
  2314 ;;		_main
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           
  2319                           ;psect for function _ModuleTypeSpecificInit
  2320  04CB                     _ModuleTypeSpecificInit:	
  2321                           
  2322                           ;moduleTypeSpecific.c: 98: PwmInit();
  2323                           
  2324                           ;incstack = 0
  2325                           ; Regs used in _ModuleTypeSpecificInit: [wreg+status,2+status,0+pclath+cstack]
  2326  04CB  25DE               	fcall	_PwmInit
  2327  04CC  0008               	return
  2328  04CD                     __end_of_ModuleTypeSpecificInit:	
  2329                           
  2330                           	psect	text12
  2331  05DE                     __ptext12:	
  2332 ;; *************** function _PwmInit *****************
  2333 ;; Defined at:
  2334 ;;		line 3 in file "../common/pwm.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;		None
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;		None
  2339 ;; Return value:  Size  Location     Type
  2340 ;;		None               void
  2341 ;; Registers used:
  2342 ;;		wreg, status,2, status,0
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1
  2348 ;;      Params:         0       0       0
  2349 ;;      Locals:         0       0       0
  2350 ;;      Temps:          0       0       0
  2351 ;;      Totals:         0       0       0
  2352 ;;Total ram usage:        0 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_ModuleTypeSpecificInit
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function _PwmInit
  2363  05DE                     _PwmInit:	
  2364                           
  2365                           ;pwm.c: 5: TRISC5 = 1;
  2366                           
  2367                           ;incstack = 0
  2368                           ; Regs used in _PwmInit: [wreg+status,2+status,0]
  2369  05DE  0021               	movlb	1	; select bank1
  2370  05DF  168E               	bsf	14,5	;volatile
  2371                           
  2372                           ;pwm.c: 6: TRISC3 = 1;
  2373  05E0  158E               	bsf	14,3	;volatile
  2374                           
  2375                           ;pwm.c: 7: TRISA2 = 1;
  2376  05E1  150C               	bsf	12,2	;volatile
  2377                           
  2378                           ;pwm.c: 9: PWM1CON = 0x00;
  2379  05E2  002C               	movlb	12	; select bank12
  2380  05E3  0193               	clrf	19	;volatile
  2381                           
  2382                           ;pwm.c: 10: PWM2CON = 0x00;
  2383  05E4  0196               	clrf	22	;volatile
  2384                           
  2385                           ;pwm.c: 11: PWM3CON = 0x00;
  2386  05E5  0199               	clrf	25	;volatile
  2387                           
  2388                           ;pwm.c: 13: PWM1DCH = 0x00;
  2389  05E6  0192               	clrf	18	;volatile
  2390                           
  2391                           ;pwm.c: 14: PWM2DCH = 0x00;
  2392  05E7  0195               	clrf	21	;volatile
  2393                           
  2394                           ;pwm.c: 15: PWM3DCH = 0x00;
  2395  05E8  0198               	clrf	24	;volatile
  2396                           
  2397                           ;pwm.c: 17: PWM1DCL = 0x00;
  2398  05E9  0191               	clrf	17	;volatile
  2399                           
  2400                           ;pwm.c: 18: PWM2DCL = 0x00;
  2401  05EA  0194               	clrf	20	;volatile
  2402                           
  2403                           ;pwm.c: 19: PWM3DCL = 0x00;
  2404  05EB  0197               	clrf	23	;volatile
  2405                           
  2406                           ;pwm.c: 21: PR2 = 255;
  2407  05EC  30FF               	movlw	255
  2408  05ED  0020               	movlb	0	; select bank0
  2409  05EE  009B               	movwf	27	;volatile
  2410                           
  2411                           ;pwm.c: 24: TMR2IF = 0;
  2412  05EF  1091               	bcf	17,1	;volatile
  2413                           
  2414                           ;pwm.c: 25: T2CONbits.T2CKPS = 0b00;
  2415  05F0  30FC               	movlw	-4
  2416  05F1  059C               	andwf	28,f	;volatile
  2417                           
  2418                           ;pwm.c: 26: TMR2ON = 1;
  2419  05F2  151C               	bsf	28,2	;volatile
  2420                           
  2421                           ;pwm.c: 29: PWM1EN = 1;
  2422  05F3  002C               	movlb	12	; select bank12
  2423  05F4  1793               	bsf	19,7	;volatile
  2424                           
  2425                           ;pwm.c: 30: PWM2EN = 1;
  2426  05F5  1796               	bsf	22,7	;volatile
  2427                           
  2428                           ;pwm.c: 31: PWM3EN = 1;
  2429  05F6  1799               	bsf	25,7	;volatile
  2430  05F7                     l497:	
  2431                           ;pwm.c: 35: ;
  2432                           
  2433                           ;pwm.c: 34: while (!TMR2IF)
  2434                           
  2435  05F7  0020               	movlb	0	; select bank0
  2436  05F8  1C91               	btfss	17,1	;volatile
  2437  05F9  2DF7               	goto	l497
  2438                           
  2439                           ;pwm.c: 37: TRISC5 = 0;
  2440  05FA  0021               	movlb	1	; select bank1
  2441  05FB  128E               	bcf	14,5	;volatile
  2442                           
  2443                           ;pwm.c: 38: TRISC3 = 0;
  2444  05FC  118E               	bcf	14,3	;volatile
  2445                           
  2446                           ;pwm.c: 39: TRISA2 = 0;
  2447  05FD  110C               	bcf	12,2	;volatile
  2448                           
  2449                           ;pwm.c: 42: PWM1OE = 1;
  2450  05FE  002C               	movlb	12	; select bank12
  2451  05FF  1713               	bsf	19,6	;volatile
  2452                           
  2453                           ;pwm.c: 43: PWM2OE = 1;
  2454  0600  1716               	bsf	22,6	;volatile
  2455                           
  2456                           ;pwm.c: 44: PWM3OE = 1;
  2457  0601  1719               	bsf	25,6	;volatile
  2458                           
  2459                           ;pwm.c: 48: PWM1POL = 0;
  2460  0602  1213               	bcf	19,4	;volatile
  2461                           
  2462                           ;pwm.c: 49: PWM2POL = 0;
  2463  0603  1216               	bcf	22,4	;volatile
  2464                           
  2465                           ;pwm.c: 50: PWM3POL = 0;
  2466  0604  1219               	bcf	25,4	;volatile
  2467                           
  2468                           ;pwm.c: 54: PWM1OUT = 0;
  2469  0605  1293               	bcf	19,5	;volatile
  2470                           
  2471                           ;pwm.c: 55: PWM2OUT = 0;
  2472  0606  1296               	bcf	22,5	;volatile
  2473                           
  2474                           ;pwm.c: 56: PWM3OUT = 0;
  2475  0607  1299               	bcf	25,5	;volatile
  2476                           
  2477                           ;pwm.c: 58: (PWM1DCH = 0);
  2478  0608  0192               	clrf	18	;volatile
  2479                           
  2480                           ;pwm.c: 59: (PWM2DCH = 0);
  2481  0609  0195               	clrf	21	;volatile
  2482                           
  2483                           ;pwm.c: 60: (PWM3DCH = 0);
  2484  060A  0198               	clrf	24	;volatile
  2485  060B  0008               	return
  2486  060C                     __end_of_PwmInit:	
  2487                           
  2488                           	psect	text13
  2489  04E5                     __ptext13:	
  2490 ;; *************** function _CommonInit *****************
  2491 ;; Defined at:
  2492 ;;		line 72 in file "../common/common.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;		None
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;		None               void
  2499 ;; Registers used:
  2500 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1
  2506 ;;      Params:         0       0       0
  2507 ;;      Locals:         0       0       0
  2508 ;;      Temps:          1       0       0
  2509 ;;      Totals:         1       0       0
  2510 ;;Total ram usage:        1 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    1
  2513 ;; This function calls:
  2514 ;;		_HEFLASH_readBlock
  2515 ;;		_HEFLASH_readByte
  2516 ;;		_I2cSlaveInit
  2517 ;; This function is called by:
  2518 ;;		_main
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           
  2523                           ;psect for function _CommonInit
  2524  04E5                     _CommonInit:	
  2525                           
  2526                           ;common.c: 75: ANSELA = 0x00;
  2527                           
  2528                           ;incstack = 0
  2529                           ; Regs used in _CommonInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2530  04E5  0023               	movlb	3	; select bank3
  2531  04E6  018C               	clrf	12	;volatile
  2532                           
  2533                           ;common.c: 76: ANSELC = 0x00;
  2534  04E7  018E               	clrf	14	;volatile
  2535                           
  2536                           ;common.c: 78: if (0 == HEFLASH_readByte(0, 0))
  2537  04E8  01F0               	clrf	HEFLASH_readByte@offset
  2538  04E9  3000               	movlw	0
  2539  04EA  2588               	fcall	_HEFLASH_readByte
  2540  04EB  3800               	iorlw	0
  2541  04EC  1D03               	skipz
  2542  04ED  2CF5               	goto	l1735
  2543                           
  2544                           ;common.c: 79: HEFLASH_readBlock((char *)&g_persistant, 0, sizeof(g_persistant));
  2545  04EE  01F0               	clrf	HEFLASH_readBlock@radd
  2546  04EF  3002               	movlw	2
  2547  04F0  00FA               	movwf	??_CommonInit
  2548  04F1  087A               	movf	??_CommonInit,w
  2549  04F2  00F1               	movwf	HEFLASH_readBlock@count
  2550  04F3  3026               	movlw	_g_persistant& (0+255)
  2551  04F4  260C               	fcall	_HEFLASH_readBlock
  2552  04F5                     l1735:	
  2553                           
  2554                           ;common.c: 87: I2cSlaveInit();
  2555  04F5  24F7               	fcall	_I2cSlaveInit
  2556  04F6  0008               	return
  2557  04F7                     __end_of_CommonInit:	
  2558                           
  2559                           	psect	text14
  2560  04F7                     __ptext14:	
  2561 ;; *************** function _I2cSlaveInit *****************
  2562 ;; Defined at:
  2563 ;;		line 17 in file "../common/i2c.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;		None               void
  2570 ;; Registers used:
  2571 ;;		wreg, status,2
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMMON   BANK0   BANK1
  2577 ;;      Params:         0       0       0
  2578 ;;      Locals:         0       0       0
  2579 ;;      Temps:          0       0       0
  2580 ;;      Totals:         0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; This function calls:
  2584 ;;		Nothing
  2585 ;; This function is called by:
  2586 ;;		_CommonInit
  2587 ;;		_SendMessageToOutput
  2588 ;;		_GetMessageFromOutput
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           
  2593                           ;psect for function _I2cSlaveInit
  2594  04F7                     _I2cSlaveInit:	
  2595                           
  2596                           ;i2c.c: 20: SSPEN = 0; PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; TRISCbits.TRISC0 = 1; TRISC
      +                          bits.TRISC1 = 1;
  2597                           
  2598                           ;incstack = 0
  2599                           ; Regs used in _I2cSlaveInit: [wreg+status,2]
  2600  04F7  0024               	movlb	4	; select bank4
  2601  04F8  1295               	bcf	21,5	;volatile
  2602  04F9  0020               	movlb	0	; select bank0
  2603  04FA  100E               	bcf	14,0	;volatile
  2604  04FB  108E               	bcf	14,1	;volatile
  2605  04FC  0021               	movlb	1	; select bank1
  2606  04FD  140E               	bsf	14,0	;volatile
  2607  04FE  148E               	bsf	14,1	;volatile
  2608                           
  2609                           ;i2c.c: 21: SSPCON2 = 0b00000001; SSPCON3 = 0x00; SSPMSK = 0x00; SSPADD = 0x00; SSPSTAT 
      +                          = 0x00; SSPCON1 = 0b00010110; SSPEN = 1;
  2610  04FF  3001               	movlw	1
  2611  0500  0024               	movlb	4	; select bank4
  2612  0501  0096               	movwf	22	;volatile
  2613  0502  0197               	clrf	23	;volatile
  2614  0503  0193               	clrf	19	;volatile
  2615  0504  0192               	clrf	18	;volatile
  2616  0505  0194               	clrf	20	;volatile
  2617  0506  3016               	movlw	22
  2618  0507  0095               	movwf	21	;volatile
  2619  0508  1695               	bsf	21,5	;volatile
  2620  0509  0008               	return
  2621  050A                     __end_of_I2cSlaveInit:	
  2622                           
  2623                           	psect	text15
  2624  0588                     __ptext15:	
  2625 ;; *************** function _HEFLASH_readByte *****************
  2626 ;; Defined at:
  2627 ;;		line 56 in file "../common/HEFlash.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  radd            1    wreg     unsigned char 
  2630 ;;  offset          1    0[COMMON] unsigned char 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  radd            1    9[COMMON] unsigned char 
  2633 ;;  add             2    7[COMMON] unsigned int 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      unsigned char 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1
  2643 ;;      Params:         1       0       0
  2644 ;;      Locals:         3       0       0
  2645 ;;      Temps:          6       0       0
  2646 ;;      Totals:        10       0       0
  2647 ;;Total ram usage:       10 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; This function calls:
  2650 ;;		Nothing
  2651 ;; This function is called by:
  2652 ;;		_CommonInit
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           
  2657                           ;psect for function _HEFLASH_readByte
  2658  0588                     _HEFLASH_readByte:	
  2659                           
  2660                           ;incstack = 0
  2661                           ; Regs used in _HEFLASH_readByte: [wreg+status,2+status,0]
  2662                           ;HEFLASH_readByte@radd stored from wreg
  2663  0588  00F9               	movwf	HEFLASH_readByte@radd
  2664                           
  2665                           ;HEFlash.c: 59: unsigned add = radd * 16 + 0x0780 + offset;
  2666  0589  0870               	movf	HEFLASH_readByte@offset,w
  2667  058A  00F1               	movwf	??_HEFLASH_readByte
  2668  058B  01F2               	clrf	??_HEFLASH_readByte+1
  2669  058C  0879               	movf	HEFLASH_readByte@radd,w
  2670  058D  00F3               	movwf	??_HEFLASH_readByte+2
  2671  058E  01F4               	clrf	??_HEFLASH_readByte+3
  2672  058F  0EF3               	swapf	??_HEFLASH_readByte+2,f
  2673  0590  0EF4               	swapf	??_HEFLASH_readByte+3,f
  2674  0591  30F0               	movlw	240
  2675  0592  05F4               	andwf	??_HEFLASH_readByte+3,f
  2676  0593  0873               	movf	??_HEFLASH_readByte+2,w
  2677  0594  390F               	andlw	15
  2678  0595  04F4               	iorwf	??_HEFLASH_readByte+3,f
  2679  0596  30F0               	movlw	240
  2680  0597  05F3               	andwf	??_HEFLASH_readByte+2,f
  2681  0598  0871               	movf	??_HEFLASH_readByte,w
  2682  0599  0773               	addwf	??_HEFLASH_readByte+2,w
  2683  059A  00F5               	movwf	??_HEFLASH_readByte+4
  2684  059B  0872               	movf	??_HEFLASH_readByte+1,w
  2685  059C  3D74               	addwfc	??_HEFLASH_readByte+3,w
  2686  059D  00F6               	movwf	??_HEFLASH_readByte+5
  2687  059E  0875               	movf	??_HEFLASH_readByte+4,w
  2688  059F  3E80               	addlw	128
  2689  05A0  00F7               	movwf	HEFLASH_readByte@add
  2690  05A1  3007               	movlw	7
  2691  05A2  3D76               	addwfc	??_HEFLASH_readByte+5,w
  2692  05A3  00F8               	movwf	HEFLASH_readByte@add+1
  2693                           
  2694                           ;HEFlash.c: 61: PMADR = add; PMCON1bits.CFGS = 0; PMCON1bits.RD = 1; __nop(); __nop();;
  2695  05A4  0878               	movf	HEFLASH_readByte@add+1,w
  2696  05A5  0023               	movlb	3	; select bank3
  2697  05A6  0192               	clrf	18	;volatile
  2698  05A7  0792               	addwf	18,f	;volatile
  2699  05A8  0877               	movf	HEFLASH_readByte@add,w
  2700  05A9  0191               	clrf	17	;volatile
  2701  05AA  0791               	addwf	17,f	;volatile
  2702  05AB  1315               	bcf	21,6	;volatile
  2703  05AC  1415               	bsf	21,0	;volatile
  2704  05AD  0000               	nop
  2705  05AE  0000               	nop
  2706                           
  2707                           ;HEFlash.c: 62: return (char)PMDAT;
  2708  05AF  0023               	movlb	3	; select bank3
  2709  05B0  0813               	movf	19,w	;volatile
  2710  05B1  0008               	return
  2711  05B2                     __end_of_HEFLASH_readByte:	
  2712                           
  2713                           	psect	text16
  2714  060C                     __ptext16:	
  2715 ;; *************** function _HEFLASH_readBlock *****************
  2716 ;; Defined at:
  2717 ;;		line 39 in file "../common/HEFlash.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  buffer          1    wreg     PTR unsigned char 
  2720 ;;		 -> g_persistant(2), 
  2721 ;;  radd            1    0[COMMON] unsigned char 
  2722 ;;  count           1    1[COMMON] unsigned char 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  buffer          1    6[COMMON] PTR unsigned char 
  2725 ;;		 -> g_persistant(2), 
  2726 ;;  add             2    4[COMMON] unsigned int 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      unsigned char 
  2729 ;; Registers used:
  2730 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1
  2736 ;;      Params:         2       0       0
  2737 ;;      Locals:         3       0       0
  2738 ;;      Temps:          2       0       0
  2739 ;;      Totals:         7       0       0
  2740 ;;Total ram usage:        7 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_CommonInit
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           
  2750                           ;psect for function _HEFLASH_readBlock
  2751  060C                     _HEFLASH_readBlock:	
  2752                           
  2753                           ;incstack = 0
  2754                           ; Regs used in _HEFLASH_readBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
  2755                           ;HEFLASH_readBlock@buffer stored from wreg
  2756  060C  00F6               	movwf	HEFLASH_readBlock@buffer
  2757                           
  2758                           ;HEFlash.c: 42: unsigned add = radd * 16 + 0x0780;
  2759  060D  0870               	movf	HEFLASH_readBlock@radd,w
  2760  060E  00F2               	movwf	??_HEFLASH_readBlock
  2761  060F  01F3               	clrf	??_HEFLASH_readBlock+1
  2762  0610  0EF2               	swapf	??_HEFLASH_readBlock,f
  2763  0611  0EF3               	swapf	??_HEFLASH_readBlock+1,f
  2764  0612  30F0               	movlw	240
  2765  0613  05F3               	andwf	??_HEFLASH_readBlock+1,f
  2766  0614  0872               	movf	??_HEFLASH_readBlock,w
  2767  0615  390F               	andlw	15
  2768  0616  04F3               	iorwf	??_HEFLASH_readBlock+1,f
  2769  0617  30F0               	movlw	240
  2770  0618  05F2               	andwf	??_HEFLASH_readBlock,f
  2771  0619  0872               	movf	??_HEFLASH_readBlock,w
  2772  061A  3E80               	addlw	128
  2773  061B  00F4               	movwf	HEFLASH_readBlock@add
  2774  061C  3007               	movlw	7
  2775  061D  3D73               	addwfc	??_HEFLASH_readBlock+1,w
  2776  061E  00F5               	movwf	HEFLASH_readBlock@add+1
  2777                           
  2778                           ;HEFlash.c: 44: if ((count > 16)||(radd >= (0x07FF-0x0780+1)/16))
  2779  061F  3011               	movlw	17
  2780  0620  0271               	subwf	HEFLASH_readBlock@count,w
  2781  0621  1803               	skipnc
  2782  0622  0008               	return
  2783  0623  3008               	movlw	8
  2784  0624  0270               	subwf	HEFLASH_readBlock@radd,w
  2785  0625  1803               	btfsc	3,0
  2786  0626  0008               	return
  2787  0627                     l1639:	
  2788  0627  08F1               	movf	HEFLASH_readBlock@count,f
  2789  0628  1903               	btfsc	3,2
  2790  0629  0008               	return
  2791                           
  2792                           ;HEFlash.c: 48: {
  2793                           ;HEFlash.c: 49: PMADR = add++; PMCON1bits.CFGS = 0; PMCON1bits.RD = 1; __nop(); __nop();
      +                          ;
  2794                           
  2795                           ;HEFlash.c: 47: while (count > 0)
  2796                           
  2797                           ;HEFlash.c: 45: return -1;
  2798                           ;	Return value of _HEFLASH_readBlock is never used
  2799  062A  0875               	movf	HEFLASH_readBlock@add+1,w
  2800  062B  0023               	movlb	3	; select bank3
  2801  062C  0192               	clrf	18	;volatile
  2802  062D  0792               	addwf	18,f	;volatile
  2803  062E  0874               	movf	HEFLASH_readBlock@add,w
  2804  062F  0191               	clrf	17	;volatile
  2805  0630  0791               	addwf	17,f	;volatile
  2806  0631  3001               	movlw	1
  2807  0632  07F4               	addwf	HEFLASH_readBlock@add,f
  2808  0633  3000               	movlw	0
  2809  0634  3DF5               	addwfc	HEFLASH_readBlock@add+1,f
  2810  0635  1315               	bcf	21,6	;volatile
  2811  0636  1415               	bsf	21,0	;volatile
  2812  0637  0000               	nop
  2813  0638  0000               	nop
  2814                           
  2815                           ;HEFlash.c: 50: *buffer++ = (char)PMDAT;
  2816  0639  0023               	movlb	3	; select bank3
  2817  063A  0813               	movf	19,w	;volatile
  2818  063B  00F2               	movwf	??_HEFLASH_readBlock
  2819  063C  0876               	movf	HEFLASH_readBlock@buffer,w
  2820  063D  0086               	movwf	6
  2821  063E  0187               	clrf	7
  2822  063F  0872               	movf	??_HEFLASH_readBlock,w
  2823  0640  0081               	movwf	1
  2824  0641  3001               	movlw	1
  2825  0642  00F2               	movwf	??_HEFLASH_readBlock
  2826  0643  0872               	movf	??_HEFLASH_readBlock,w
  2827  0644  07F6               	addwf	HEFLASH_readBlock@buffer,f
  2828                           
  2829                           ;HEFlash.c: 51: count--;
  2830  0645  3001               	movlw	1
  2831  0646  02F1               	subwf	HEFLASH_readBlock@count,f
  2832  0647  2E27               	goto	l1639
  2833  0648                     __end_of_HEFLASH_readBlock:	
  2834                           ;HEFlash.c: 52: }
  2835                           ;HEFlash.c: 54: return 0;
  2836                           ;	Return value of _HEFLASH_readBlock is never used
  2837                           
  2838                           
  2839                           	psect	text17
  2840  0648                     __ptext17:	
  2841 ;; *************** function _CheckI2cAsSlave *****************
  2842 ;; Defined at:
  2843 ;;		line 208 in file "../common/i2c.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;		None
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  value           1    2[COMMON] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;		None               void
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1
  2857 ;;      Params:         0       0       0
  2858 ;;      Locals:         1       0       0
  2859 ;;      Temps:          2       0       0
  2860 ;;      Totals:         3       0       0
  2861 ;;Total ram usage:        3 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; This function calls:
  2864 ;;		Nothing
  2865 ;; This function is called by:
  2866 ;;		_main
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           
  2871                           ;psect for function _CheckI2cAsSlave
  2872  0648                     _CheckI2cAsSlave:	
  2873                           
  2874                           ;i2c.c: 211: unsigned char value;
  2875                           ;i2c.c: 212: if (!SSP1IF)
  2876                           
  2877                           ;incstack = 0
  2878                           ; Regs used in _CheckI2cAsSlave: [wreg+status,2+status,0]
  2879  0648  0020               	movlb	0	; select bank0
  2880  0649  1D91               	btfss	17,3	;volatile
  2881  064A  0008               	return
  2882                           
  2883                           ;i2c.c: 215: SSP1IF = 0;
  2884                           
  2885                           ;i2c.c: 213: return;
  2886  064B  1191               	bcf	17,3	;volatile
  2887                           
  2888                           ;i2c.c: 217: value = SSPBUF;
  2889  064C  0024               	movlb	4	; select bank4
  2890  064D  0811               	movf	17,w	;volatile
  2891  064E  00F0               	movwf	??_CheckI2cAsSlave
  2892  064F  0870               	movf	??_CheckI2cAsSlave,w
  2893  0650  00F2               	movwf	CheckI2cAsSlave@value
  2894                           
  2895                           ;i2c.c: 220: if (!SSPSTATbits.D_nA)
  2896  0651  1A94               	btfsc	20,5	;volatile
  2897  0652  2E7C               	goto	l1783
  2898                           
  2899                           ;i2c.c: 221: {
  2900                           ;i2c.c: 222: g_stateFollowed = (0 == (value & 2));
  2901  0653  3000               	movlw	0
  2902  0654  1CF2               	btfss	CheckI2cAsSlave@value,1
  2903  0655  3001               	movlw	1
  2904  0656  00F0               	movwf	??_CheckI2cAsSlave
  2905  0657  0870               	movf	??_CheckI2cAsSlave,w
  2906  0658  0020               	movlb	0	; select bank0
  2907  0659  00A4               	movwf	_g_stateFollowed
  2908                           
  2909                           ;i2c.c: 223: g_commandInstruction = (value >> 2);
  2910  065A  0872               	movf	CheckI2cAsSlave@value,w
  2911  065B  00F0               	movwf	??_CheckI2cAsSlave
  2912  065C  3002               	movlw	2
  2913  065D                     u1005:	
  2914  065D  36F0               	lsrf	??_CheckI2cAsSlave,f
  2915  065E  0B89               	decfsz	9,f
  2916  065F  2E5D               	goto	u1005
  2917  0660  0870               	movf	??_CheckI2cAsSlave,w
  2918  0661  00F1               	movwf	??_CheckI2cAsSlave+1
  2919  0662  0871               	movf	??_CheckI2cAsSlave+1,w
  2920  0663  00A1               	movwf	_g_commandInstruction
  2921                           
  2922                           ;i2c.c: 225: if (COMMAND_FLASH_GET_VERSION == g_commandInstruction)
  2923  0664  0821               	movf	_g_commandInstruction,w
  2924  0665  3A03               	xorlw	3
  2925  0666  1D03               	skipz
  2926  0667  2E6D               	goto	l1777
  2927                           
  2928                           ;i2c.c: 226: {
  2929                           ;i2c.c: 227: g_bootloaderPolicy = 1;
  2930  0668  01A0               	clrf	_g_bootloaderPolicy
  2931  0669  0AA0               	incf	_g_bootloaderPolicy,f
  2932                           
  2933                           ;i2c.c: 228: SSPBUF = 0;
  2934  066A  0024               	movlb	4	; select bank4
  2935  066B  0191               	clrf	17	;volatile
  2936                           
  2937                           ;i2c.c: 229: }
  2938  066C  2E75               	goto	l342
  2939  066D                     l1777:	
  2940                           
  2941                           ;i2c.c: 230: else if (COMMAND_GET_CURRENT_MODE == g_commandInstruction)
  2942  066D  0020               	movlb	0	; select bank0
  2943  066E  0821               	movf	_g_commandInstruction,w
  2944  066F  3A02               	xorlw	2
  2945  0670  1D03               	skipz
  2946  0671  2E75               	goto	l342
  2947                           
  2948                           ;i2c.c: 231: SSPBUF = g_persistant.mode;
  2949  0672  0827               	movf	_g_persistant+1,w
  2950  0673  0024               	movlb	4	; select bank4
  2951  0674  0091               	movwf	17	;volatile
  2952  0675                     l342:	
  2953                           
  2954                           ;i2c.c: 242: if (COMMAND_FLASH_GET_VERSION != g_commandInstruction)
  2955  0675  0020               	movlb	0	; select bank0
  2956  0676  0821               	movf	_g_commandInstruction,w
  2957  0677  3A03               	xorlw	3
  2958  0678  1903               	skipnz
  2959  0679  2E8E               	goto	l1795
  2960                           
  2961                           ;i2c.c: 243: g_bootloaderPolicy = 0;
  2962  067A  01A0               	clrf	_g_bootloaderPolicy
  2963                           
  2964                           ;i2c.c: 244: }
  2965  067B  2E8E               	goto	l1795
  2966  067C                     l1783:	
  2967                           
  2968                           ;i2c.c: 245: else
  2969                           ;i2c.c: 246: {
  2970                           ;i2c.c: 247: g_bootloaderPolicy = 0;
  2971  067C  0020               	movlb	0	; select bank0
  2972  067D  01A0               	clrf	_g_bootloaderPolicy
  2973                           
  2974                           ;i2c.c: 248: if (g_stateFollowed)
  2975  067E  0824               	movf	_g_stateFollowed,w
  2976  067F  1903               	btfsc	3,2
  2977  0680  2E88               	goto	l1791
  2978                           
  2979                           ;i2c.c: 249: {
  2980                           ;i2c.c: 250: g_state = value;
  2981  0681  0872               	movf	CheckI2cAsSlave@value,w
  2982  0682  00F0               	movwf	??_CheckI2cAsSlave
  2983  0683  0870               	movf	??_CheckI2cAsSlave,w
  2984  0684  00A8               	movwf	_g_state
  2985                           
  2986                           ;i2c.c: 251: g_stateChanged = 1;
  2987  0685  01B1               	clrf	_g_stateChanged
  2988  0686  0AB1               	incf	_g_stateChanged,f
  2989                           
  2990                           ;i2c.c: 252: }
  2991  0687  2E8E               	goto	l1795
  2992  0688                     l1791:	
  2993                           
  2994                           ;i2c.c: 253: else
  2995                           ;i2c.c: 254: {
  2996                           ;i2c.c: 255: g_commandValue = value;
  2997  0688  0872               	movf	CheckI2cAsSlave@value,w
  2998  0689  00F0               	movwf	??_CheckI2cAsSlave
  2999  068A  0870               	movf	??_CheckI2cAsSlave,w
  3000  068B  00A3               	movwf	_g_commandValue
  3001                           
  3002                           ;i2c.c: 256: g_commandRecieved = 1;
  3003  068C  01A2               	clrf	_g_commandRecieved
  3004  068D  0AA2               	incf	_g_commandRecieved,f
  3005  068E                     l1795:	
  3006                           
  3007                           ;i2c.c: 257: }
  3008                           ;i2c.c: 258: }
  3009                           ;i2c.c: 259: if (SEN)
  3010  068E  0024               	movlb	4	; select bank4
  3011  068F  1C16               	btfss	22,0	;volatile
  3012  0690  0008               	return
  3013                           
  3014                           ;i2c.c: 260: CKP = 1;
  3015  0691  1615               	bsf	21,4	;volatile
  3016  0692  0008               	return
  3017  0693                     __end_of_CheckI2cAsSlave:	
  3018  007E                     btemp	set	126	;btemp
  3019  007E                     pic14e$flags	set	126
  3020  007E                     wtemp	set	126
  3021  007E                     wtemp0	set	126
  3022  0080                     wtemp1	set	128
  3023  0082                     wtemp2	set	130
  3024  0084                     wtemp3	set	132
  3025  0086                     wtemp4	set	134
  3026  0088                     wtemp5	set	136
  3027  007F                     wtemp6	set	127
  3028  007E                     ttemp	set	126
  3029  007E                     ttemp0	set	126
  3030  0081                     ttemp1	set	129
  3031  0084                     ttemp2	set	132
  3032  0087                     ttemp3	set	135
  3033  007F                     ttemp4	set	127
  3034  007E                     ltemp	set	126
  3035  007E                     ltemp0	set	126
  3036  0082                     ltemp1	set	130
  3037  0086                     ltemp2	set	134
  3038  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      18
    BANK1            32      0       0

Pointer List with Targets:

    HEFLASH_readBlock@buffer	PTR unsigned char  size(1) Largest target is 2
		 -> g_persistant(BANK0[2]), 

    HEFLASH_writeBlock@data	PTR unsigned char  size(1) Largest target is 2
		 -> g_persistant(BANK0[2]), 


Critical Paths under _main in COMMON

    _ProcessStateChangedModuleTypeSpecific->_SetWhiteValue
    _SetWhiteValue->_SetDutyCyclePWM
    _SetColor->_SetDutyCyclePWM
    _ProcessCommand->_HEFLASH_writeBlock
    _CommonInit->_HEFLASH_readByte

Critical Paths under _main in BANK0

    _main->_ProcessStateChangedModuleTypeSpecific
    _ProcessStateChangedModuleTypeSpecific->_SetColor

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4229
                    _CheckI2cAsSlave
                         _CommonInit
             _ModuleTypeSpecificInit
                     _ProcessCommand
          _ProcessModuleFunctionalit
          _ProcessStateChangedCommon
_ProcessStateChangedModuleTypeSpecif
 ---------------------------------------------------------------------------------
 (1) _ProcessStateChangedModuleTypeSpecific                2     2      0    3337
                                              6 BANK0      2     2      0
                           _SetColor
                      _SetWhiteValue
 ---------------------------------------------------------------------------------
 (2) _SetWhiteValue                                        3     3      0    1224
                                             11 COMMON     3     3      0
                    _SetDutyCyclePWM
 ---------------------------------------------------------------------------------
 (2) _SetColor                                             8     6      2    2090
                                             11 COMMON     2     0      2
                                              0 BANK0      6     6      0
                    _SetDutyCyclePWM
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              6     5      1     212
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (3) _SetDutyCyclePWM                                     11     9      2    1158
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (1) _ProcessStateChangedCommon                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ProcessModuleFunctionalit                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ProcessCommand                                       2     2      0     414
                                              7 COMMON     2     2      0
                 _HEFLASH_writeBlock
 ---------------------------------------------------------------------------------
 (2) _HEFLASH_writeBlock                                   7     5      2     414
                                              0 COMMON     7     5      2
                            __unlock
 ---------------------------------------------------------------------------------
 (3) __unlock                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ModuleTypeSpecificInit                               0     0      0       0
                            _PwmInit
 ---------------------------------------------------------------------------------
 (2) _PwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CommonInit                                           1     1      0     389
                                             10 COMMON     1     1      0
                  _HEFLASH_readBlock
                   _HEFLASH_readByte
                       _I2cSlaveInit
 ---------------------------------------------------------------------------------
 (2) _I2cSlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HEFLASH_readByte                                    10     9      1     120
                                              0 COMMON    10     9      1
 ---------------------------------------------------------------------------------
 (2) _HEFLASH_readBlock                                    7     5      2     269
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _CheckI2cAsSlave                                      3     3      0      89
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckI2cAsSlave
   _CommonInit
     _HEFLASH_readBlock
     _HEFLASH_readByte
     _I2cSlaveInit
   _ModuleTypeSpecificInit
     _PwmInit
   _ProcessCommand
     _HEFLASH_writeBlock
       __unlock
   _ProcessModuleFunctionalit
   _ProcessStateChangedCommon
   _ProcessStateChangedModuleTypeSpecific
     _SetColor
       _SetDutyCyclePWM
       ___lbmod
     _SetWhiteValue
       _SetDutyCyclePWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      20       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      8      12       6       22.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      20       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun May 10 11:01:15 2015

                                   __CFG_CP$OFF 0000                                     _SSPSTATbits 0214  
                            _g_bootloaderPolicy 0020                                             l342 0675  
                         __end_of_SetWhiteValue 04E5                                             l416 050E  
                                           l497 05F7                                             l770 055D  
                                           _CKE 10A6                                             _CKP 10AC  
                                           _RA4 0064                                             _RA5 0065  
                                           _PR2 001B                                             _SEN 10B0  
                                           u735 0730                                             u675 054D  
                                           _SMP 10A7                         __end_of_CheckI2cAsSlave 0693  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                  __CFG_LVP$OFF 0000                                            l1503 0741  
                                          l1515 075B                                            l1507 0749  
                                          l1701 0570                                            l1519 0766  
                                          l1703 057A                                            l1721 05CA  
                                          l1491 0713                                            l1707 057E  
                                          l1581 06BB                                            l1469 054A  
                                          l1639 0627                                            l1735 04F5  
                                          l1583 06E0                                            l1497 0723  
                                          l1791 0688                                            l1783 067C  
                                          l1777 066D                                            l1795 068E  
                                          l1699 0567                                            l1875 051D  
                                          l1869 0516                                            u1005 065D  
                    __end_of_HEFLASH_writeBlock 06F9                                    __CFG_WRT$OFF 0000  
                                          _main 050A                                            fsr1h 0007  
                                          indf1 0001                                            fsr1l 0006  
                                          btemp 007E                                   __CFG_BOREN$ON 0000  
               __size_of_ModuleTypeSpecificInit 0002                                            ltemp 007E  
                                          start 0002                                            ttemp 007E  
                                          wtemp 007E                                 __end_of_PwmInit 060C  
                                         PMCON1 0195                                           PMCON2 0196  
                                         ?_main 0070                                   __CFG_WDTE$OFF 0000  
                               __end_of___lbmod 0563                                           _SDAHT 10BB  
                                         _PMADR 0191                                           _PMDAT 0193  
                                         _SSPM3 10AB                                           _SSPEN 10AD  
                           HEFLASH_readByte@add 0077                                 __end_of__unlock 04D9  
                     __size_of_HEFLASH_readByte 002A                                      _CommonInit 04E5  
                                         ltemp0 007E                                           ltemp1 0082  
                                         ltemp2 0086                                           ltemp3 0080  
                        HEFLASH_writeBlock@data 0070                          HEFLASH_writeBlock@radd 0074  
                                         ttemp0 007E                                           ttemp1 0081  
                                         ttemp2 0084                                           ttemp3 0087  
                                         ttemp4 007F                                           status 0003  
                                         wtemp0 007E                                           wtemp1 0080  
                                         wtemp2 0082                                           wtemp3 0084  
                                         wtemp4 0086                                           wtemp5 0088  
                                         wtemp6 007F                                  __CFG_MCLRE$OFF 0000  
                               __initialization 0772              __size_of_ProcessModuleFunctionalit 0001  
                                  __end_of_main 0526                                  __CFG_LPBOR$OFF 0000  
                          __end_of_I2cSlaveInit 050A                                  _g_commandValue 0023  
                                        ??_main 007E                                __end_of_SetColor 0772  
                            SetWhiteValue@value 007D                          _ModuleTypeSpecificInit 04CB  
                              ?_CheckI2cAsSlave 0070                            HEFLASH_readBlock@add 0074  
                                        _ANSELA 018C                                          _ANSELC 018E  
            __size_of_ProcessStateChangedCommon 0003     ProcessStateChangedModuleTypeSpecific@g_mode 0030  
                                        _PWM1EN 309F                                          _PWM2EN 30B7  
                                        _PWM3EN 30CF                                          _PWM1OE 309E  
                                        _TMR2IF 0089                                          _PWM2OE 30B6  
                                        _PWM3OE 30CE                                          _TMR2ON 00E2  
                                        _SSP1IF 008B                               _g_commandRecieved 0022  
                                        _SSPADD 0212                                          _TRISA2 0462  
                                        _TRISA5 0465                                          _TRISC3 0473  
                                        _TRISC5 0475                                          _SSPBUF 0211  
                                        _SSPMSK 0213                                  __CFG_PWRTE$OFF 0000  
                          HEFLASH_readByte@radd 0079                                       ??_PwmInit 0070  
                                __CFG_STVREN$ON 0000                                       ??___lbmod 0071  
                           SetDutyCyclePWM@blue 0071                                       ??__unlock 0070  
                      __size_of_SetDutyCyclePWM 001E                         HEFLASH_writeBlock@count 0071  
                                   ?_CommonInit 0070                                 ___lbmod@divisor 0070  
                       __end_of__initialization 077D                                 ___lbmod@counter 0074  
                                __pcstackCOMMON 0070                                    __pidataBANK0 04CA  
                       __size_of_ProcessCommand 002C                                _HEFLASH_readByte 0588  
                                    __pbssBANK0 0020                                       ?_SetColor 007B  
                       HEFLASH_readBlock@buffer 0076                           HEFLASH_readBlock@radd 0070  
                                    __pmaintext 050A                           __size_of_I2cSlaveInit 0013  
                            _HEFLASH_writeBlock 0693                             __size_of_CommonInit 0012  
                                    _g_toOutput 0025                             ?_HEFLASH_writeBlock 0070  
                               _g_stateFollowed 0024                                         _PWM1DCH 0612  
                                       _PWM1DCL 0611                                         _PWM2DCH 0615  
                                       _PWM2DCL 0614                                         _PWM3DCH 0618  
                                       _PWM3DCL 0617                                         _PWM1CON 0613  
                                       _PWM2CON 0616                                         _PWM3CON 0619  
                                       _PWM1POL 309C                                         _PWM2POL 30B4  
                                       _PWM3POL 30CC                                         _PWM1OUT 309D  
                                       _PWM2OUT 30B5                                         _PWM3OUT 30CD  
                                       _SSPCON1 0215                                         _SSPCON2 0216  
                                       _SSPCON3 0217                                         _SSPSTAT 0214  
                             ??_SetDutyCyclePWM 0072                                    _g_persistant 0026  
                                  _I2cSlaveInit 04F7                            ??_HEFLASH_writeBlock 0072  
                                    ??_SetColor 0029                          __size_of_SetWhiteValue 000C  
                                       _PwmInit 05DE                                         ___lbmod 0544  
                       ?_ModuleTypeSpecificInit 0070                                         __ptext1 0563  
                                       __ptext2 04D9                                         __ptext3 06F9  
                                       __ptext4 0544                                         __ptext5 0526  
                                       __ptext6 04CD                                         __ptext7 04C9  
                                       __ptext8 05B2                                         __ptext9 0693  
                                       _g_state 0028                                         __unlock 04D0  
                                     _T2CONbits 001C                            SetDutyCyclePWM@green 0070  
                          end_of_initialization 077D                  __end_of_ModuleTypeSpecificInit 04CD  
                                     _PORTCbits 000E                                  _ProcessCommand 05B2  
                                 _SetWhiteValue 04D9                                __CFG_FOSC$INTOSC 0000  
                              ___lbmod@dividend 0073                                       _TRISCbits 008E  
                                  ??_CommonInit 007A                        __size_of_CheckI2cAsSlave 004B  
                                   ___lbmod@rem 0075                            _g_commandInstruction 0021  
                      __end_of_HEFLASH_readByte 05B2                              __end_of_CommonInit 04F7  
                        __end_of_ProcessCommand 05DE                      ?_ProcessModuleFunctionalit 0070  
                                ?_SetWhiteValue 0070                           HEFLASH_writeBlock@add 0075  
                                     SetColor@i 002C                             start_initialization 0772  
                    ?_ProcessStateChangedCommon 0070                               _HEFLASH_readBlock 060C  
                             __size_of_SetColor 0079                           SetColor@blackAndWhite 007C  
                            ?_HEFLASH_readBlock 0070                              SetDutyCyclePWM@red 007A  
                                   __pdataBANK0 0031                                 ?_ProcessCommand 0070  
             __end_of_ProcessModuleFunctionalit 04CA                                 _SetDutyCyclePWM 0526  
                           ??_HEFLASH_readBlock 0072                                       ___latbits 0000  
                                 __pcstackBANK0 0029                       __end_of_HEFLASH_readBlock 0648  
             __end_of_ProcessStateChangedCommon 04D0                               ??_CheckI2cAsSlave 0070  
                        HEFLASH_readBlock@count 0071                                        ?_PwmInit 0070  
                                _g_stateChanged 0031                                        ?___lbmod 0070  
                               ??_SetWhiteValue 007B                                        ?__unlock 0070  
                   __size_of_HEFLASH_writeBlock 0066                         __end_of_SetDutyCyclePWM 0544  
                             SetColor@pwmPeriod 007B   __end_of_ProcessStateChangedModuleTypeSpecific 0588  
__size_of_ProcessStateChangedModuleTypeSpecific 0025         ??_ProcessStateChangedModuleTypeSpecific 002F  
        ?_ProcessStateChangedModuleTypeSpecific 0070           _ProcessStateChangedModuleTypeSpecific 0563  
                        HEFLASH_readByte@offset 0070                      __size_of_HEFLASH_readBlock 003C  
                                      _SetColor 06F9                            CheckI2cAsSlave@value 0072  
                             ?_HEFLASH_readByte 0070                                __size_of_PwmInit 002E  
                              __size_of___lbmod 001F                              ??_HEFLASH_readByte 0071  
                   ??_ProcessModuleFunctionalit 0070                                __size_of__unlock 0009  
                                      __ptext10 04D0                                        __ptext11 04CB  
                                      __ptext12 05DE                                        __ptext13 04E5  
                                      __ptext14 04F7                                        __ptext15 0588  
                                      __ptext16 060C                                        __ptext17 0648  
                                 __size_of_main 001C                     ??_ProcessStateChangedCommon 0070  
                              ??_ProcessCommand 0077                                ?_SetDutyCyclePWM 0070  
                                  _SSP1STATbits 0214                                     _OSCSTATbits 009A  
                                    _INTCONbits 000B                                     pic14e$flags 007E  
                               _CheckI2cAsSlave 0648                       _ProcessModuleFunctionalit 04C9  
                                 ?_I2cSlaveInit 0070                                      _PMCON1bits 0195  
                      ??_ModuleTypeSpecificInit 0070                               __CFG_CLKOUTEN$OFF 0000  
                                    _OSCCONbits 0099                       _ProcessStateChangedCommon 04CD  
                                   _SSPCON2bits 0216                                  ??_I2cSlaveInit 0070  
                            _SetDutyCyclePWM$71 0074                              _SetDutyCyclePWM$72 0076  
                            _SetDutyCyclePWM$73 0078                                   SetColor@value 002D  
